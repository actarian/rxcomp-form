{"version":3,"sources":["docs/js/main.js","../../src/js/form/form-status.js","../../src/js/form/form-abstract.js","../../src/js/form/form-control.js","../../src/js/form/form-group.js","../../src/js/form/form-abstract-collection.js","../../src/js/form/form-validators.js","../../src/js/app.component.js","../../src/js/form/form-accessor.js","../../src/js/main.js"],"names":["global","factory","exports","module","require","define","amd","self","rxcomp","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","FormStatus","FormAbstract","validators","errors","_proto","initSubjects_","valueSubject","BehaviorSubject","valueChildren","Subject","statusSubject","statusChildren","initObservables_","_this","value$","merge","pipe","distinctUntilChanged","skip","tap","value","dirty_","next","shareReplay","status$","status","reduceValidators_","validate","map","x","filter","get","touched_","set","touched","value_","FormControl","_FormAbstract","call","ReferenceError","_assertThisInitialized","FormGroup","_FormAbstractCollecti","controls","forEach_","callback","keys","forEach","control","FormAbstractCollection","initControls_","initControl_","_this2","_this3","reduce_","result","push","combineLatest","latest","concat","_this4","all_","any_","RequiredValidator","AppComponent","_Component","apply","arguments","onInit","group","firstName","lastName","subscribe","values","console","log","valid","Component","meta","selector","AccessorProps","FormAccessor","node","Module","getContext","onChange","bind","onBlur","addEventListener","onChanges","changes","getAttributeNode","formGroup","takeUntil","unsubscribe$","pre","getPre","textContent","classList","add","remove","writeValue","setAttribute","setDisabledState","disabled","previousSibling","nodeType","document","createTextNode","parentNode","insertBefore","event","onFocus","inputs","use","factories","ClassDirective","EventDirective","ForStructure","IfStructure","InnerHtmlDirective","StyleDirective","pipes","JsonPipe","bootstrap"],"mappings":"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","file":"docs/js/main.min.js","sourcesContent":[null,"const FormStatus = {\n\tValid: 'valid',\n\tInvalid: 'invalid',\n\tPending: 'pending',\n\tDisabled: 'disabled',\n};\n\nexport default FormStatus;\n","import { BehaviorSubject, merge, Subject } from \"rxjs\";\nimport { distinctUntilChanged, shareReplay, skip, tap } from 'rxjs/operators';\nimport FormStatus from './form-status';\n\nexport default class FormAbstract {\n\tconstructor(validators = []) {\n\t\tthis.validators = validators;\n\t\t// this.errors = {};\n\t\tthis.errors = [];\n\t}\n\n\tinitSubjects_() {\n\t\tthis.valueSubject = new BehaviorSubject(null);\n\t\tthis.valueChildren = new Subject();\n\t\tthis.statusSubject = new BehaviorSubject(this);\n\t\tthis.statusChildren = new Subject();\n\t}\n\n\tinitObservables_() {\n\t\tthis.value$ = merge(this.valueSubject, this.valueChildren).pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tskip(1),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tif (value === this.value) {\n\t\t\t\t\tthis.statusSubject.next(this);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.status$ = merge(this.statusSubject, this.statusChildren).pipe(\n\t\t\t// auditTime(1),\n\t\t\ttap(status => {\n\t\t\t\tthis.reduceValidators_();\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\treduceValidators_() {\n\t\treturn [];\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tthis.errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tget valid() { return this.status === FormStatus.Valid; }\n\tget invalid() { return this.status === FormStatus.Invalid; }\n\tget pending() { return this.status === FormStatus.Pending; }\n\tget disabled() { return this.status === FormStatus.Disabled; }\n\tget enabled() { return this.status !== FormStatus.Disabled; }\n\tget dirty() { return this.dirty_; }\n\tget pristine() { return !this.dirty_; }\n\tget touched() { return this.touched_; }\n\tget untouched() { return !this.touched_; }\n\n\tset touched(touched) {\n\t\tthis.touched_ = touched;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\tget value() { return this.value_; }\n\n\tset value(value) {\n\t\tthis.value_ = value;\n\t\tthis.valueSubject.next(value);\n\t}\n\n}\n","import FormAbstract from \"./form-abstract\";\n\nexport default class FormControl extends FormAbstract {\n\n\tconstructor(value = null, validators) {\n\t\tsuper(validators);\n\t\tthis.value_ = value;\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t\tthis.statusSubject.next(this);\n\t}\n\n\treduceValidators_() {\n\t\treturn this.validate(this.value);\n\t}\n\n}\n\nexport function formControl(value, validators) {\n\treturn new FormControl(value, validators);\n}\n","import FormAbstractCollection from './form-abstract-collection';\n\nexport default class FormGroup extends FormAbstractCollection {\n\n\tconstructor(controls = {}, validators) {\n\t\tsuper(controls, validators);\n\t}\n\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(key => callback(this.controls[key], key));\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tthis.controls[key] = control;\n\t}\n\n}\n\nexport function formGroup(controls, validators) {\n\treturn new FormGroup(controls, validators);\n}\n","import { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport FormAbstract from './form-abstract';\nimport FormControl from './form-control';\nimport FormStatus from './form-status';\n\nexport default class FormAbstractCollection extends FormAbstract {\n\n\tconstructor(controls, validators) {\n\t\tsuper(validators);\n\t\tthis.controls = controls;\n\t\tthis.initControls_(controls);\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t\t// this.statusSubject.next(this);\n\t}\n\n\tinitControl_(control) {\n\t\treturn control instanceof FormAbstract ? control : new FormControl(control, this.validators);\n\t}\n\n\tinitControls_(controls) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tthis.set(this.initControl_(control), key);\n\t\t});\n\t\treturn controls;\n\t}\n\n\tinitSubjects_() {\n\t\tthis.valueSubject = new BehaviorSubject(null);\n\t\tconst valueChildren = this.reduce_((result, control) => {\n\t\t\tresult.push(control.valueSubject);\n\t\t\treturn result;\n\t\t}, []);\n\t\tthis.valueChildren = combineLatest(valueChildren).pipe(\n\t\t\tmap(latest => this.value),\n\t\t\t// distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n\t\t\t// this.dirty_ = this.any_('dirty_', true);\n\t\t\t/*\n\t\t\tmap(merged => {\n\t\t\t\tconst values = {};\n\t\t\t\tObject.keys(this.controls).forEach((key, i) => {\n\t\t\t\t\tvalues[key] = merged[i] || null;\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t}),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.statusSubject = new BehaviorSubject(this);\n\t\tconst statusChildren = this.reduce_((result, control) => {\n\t\t\tresult.push(control.status$);\n\t\t\treturn result;\n\t\t}, []);\n\t\tthis.statusChildren = combineLatest(statusChildren).pipe(\n\t\t\t/*\n\t\t\ttap(controls => {\n\t\t\t\tthis.dirty_ = this.any_('dirty_', true);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tlet errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\terrors = this.reduce_((result, control) => {\n\t\t\t\treturn result.concat(control.errors);\n\t\t\t}, errors);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(key => callback(this.controls[key], key));\n\t}\n\n\treduce_(callback, result) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tresult = callback(result, control, key);\n\t\t});\n\t\treturn result;\n\t}\n\n\tall_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result && control[key] === value;\n\t\t}, true);\n\t}\n\n\tany_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result || control[key] === value;\n\t\t}, false);\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tthis.controls[key] = control;\n\t}\n\n\tget touched() {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result && control.touched;\n\t\t}, true);\n\t}\n\n\tset touched(touched) {\n\t\t// this.touched_ = touched;\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.touched = touched;\n\t\t});\n\t\tthis.statusSubject.next(this);\n\t}\n\n\tget value() {\n\t\treturn this.reduce_((result, control, key) => {\n\t\t\tresult[key] = control.value;\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\tset value(value) {}\n\n}\n","export function RequiredValidator(value) {\n\t// return (value == null || value.length === 0) ? { required: true } : null;\n\treturn (value == null || value.length === 0) ? 'required' : null;\n}\n","import { Component } from 'rxcomp';\nimport FormGroup from './form/form-group';\nimport { RequiredValidator } from './form/form-validators';\n\nexport default class AppComponent extends Component {\n\n\tonInit() {\n\n\t\tconst group = this.group = new FormGroup({\n\t\t\tfirstName: 'Jhon',\n\t\t\tlastName: 'Appleseed',\n\t\t}, [RequiredValidator]);\n\n\t\tgroup.value$.subscribe(values => {\n\t\t\tconsole.log('AppComponent.group.value$', values);\n\t\t});\n\n\t\tgroup.status$.subscribe(() => {\n\t\t\t// console.log('AppComponent.group.status$');\n\t\t\tconsole.log('AppComponent.group.valid', group.valid);\n\t\t});\n\t}\n\n}\n\nAppComponent.meta = {\n\tselector: '[app-component]',\n};\n","import { Component, Module } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\n\nconst AccessorProps = ['untouched', 'touched', 'pristine', 'dirty', 'pending', 'enabled', 'disabled', 'valid', 'invalid'];\n\nexport default class FormAccessor extends Component {\n\n\tonInit() {\n\t\t// context\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tthis.node = node;\n\t\t// log(node.getAttributeNode('formControl').value);\n\t\t// log('name', node.name);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\tnode.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormAccessor.onChanges', changes);\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\t// console.log(key, this.formGroup);\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\tcontrol.value$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(value => {\n\t\t\tconsole.log('Accessor.control.valueChanges$', value);\n\t\t});\n\t\tcontrol.status$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(status => {\n\t\t\tconst pre = this.getPre(node);\n\t\t\tpre.textContent = '';\n\t\t\tAccessorProps.forEach(x => {\n\t\t\t\tif (control[x]) {\n\t\t\t\t\tnode.classList.add(x);\n\t\t\t\t\tpre.textContent += x + ', ';\n\t\t\t\t} else {\n\t\t\t\t\tnode.classList.remove(x);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcontrol.errors.forEach(x => pre.textContent += `invalid-${x}, `);\n\t\t});\n\t\tthis.writeValue(control.value);\n\t\t// node.value = 'test';\n\t}\n\n\twriteValue(value) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tnode.setAttribute('value', value == null ? '' : value);\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tnode.setAttribute('disabled', disabled);\n\t}\n\n\tgetPre(node) {\n\t\tlet pre = node.previousSibling;\n\t\tif (!pre || pre.nodeType !== 3) {\n\t\t\tpre = document.createTextNode('');\n\t\t\tnode.parentNode.insertBefore(pre, node);\n\t\t}\n\t\treturn pre;\n\t}\n\n\tonChange(event) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\t// event.currentTarget;\n\t\t// log(event.type, node.name, node.value, node.checked);\n\t\t// log('control', key, control.value);\n\t\tcontrol.value = node.value;\n\t}\n\n\tonFocus(event) {}\n\n\tonBlur(event) {\n\t\t// log(event.type);\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\tcontrol.touched = true;\n\t}\n}\n\nFormAccessor.meta = {\n\tselector: 'input,textarea,select',\n\tinputs: ['formGroup'],\n};\n","import { ClassDirective, EventDirective, ForStructure, IfStructure, InnerHtmlDirective, JsonPipe, Module, StyleDirective } from 'rxcomp';\nimport AppComponent from './app.component';\nimport FormAccessor from './form/form-accessor';\n\nModule.use({\n\tfactories: [\n\t\tClassDirective,\n\t\tEventDirective,\n\t\tForStructure,\n\t\tIfStructure,\n\t\tInnerHtmlDirective,\n\t\tStyleDirective,\n\t\tFormAccessor,\n\t],\n\tpipes: [\n\t\tJsonPipe,\n\t],\n\tbootstrap: AppComponent,\n});\n"]}