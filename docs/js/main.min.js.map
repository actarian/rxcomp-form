{"version":3,"sources":["docs/js/main.js","../../src/js/form/form-status.js","../../src/js/form/form-abstract.js","../../src/js/form/form-control.js","../../src/js/form/form-group.js","../../src/js/form/form-validators.js","../../src/js/app.component.js","../../src/js/form/form-accessor.js","../../src/js/main.js"],"names":["global","factory","exports","module","require","define","amd","self","rxcomp","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","FormStatus","FormAbstract","validators","errors","_proto","initSubjects","value$","BehaviorSubject","status$","childrenValue$","Subject","childrenStatus$","initObservables","_this","valueChanges$","merge","pipe","distinctUntilChanged","skip","tap","value","dirty_","next","shareReplay","statusChanges$","status","reduceValidators","validate","map","x","filter","get","touched_","set","touched","value_","FormControl","_FormAbstract","call","ReferenceError","_assertThisInitialized","FormGroup","controls","asControls","_this2","reduce_","observables","control","push","combineLatest","latest","concat","asControl","_this3","keys","forEach","forEach_","callback","_this4","k","all_","any_","RequiredValidator","AppComponent","_Component","apply","arguments","onInit","group","firstName","lastName","subscribe","values","console","log","valid","Component","meta","selector","AccessorProps","FormAccessor","node","Module","getContext","onChange","bind","onBlur","addEventListener","onChanges","changes","getAttributeNode","formGroup","takeUntil","unsubscribe$","pre","getPre","textContent","classList","add","remove","writeValue","setAttribute","setDisabledState","disabled","previousSibling","nodeType","document","createTextNode","parentNode","insertBefore","event","onFocus","inputs","use","factories","ClassDirective","EventDirective","ForStructure","IfStructure","InnerHtmlDirective","StyleDirective","pipes","JsonPipe","bootstrap"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACE,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQG,QAAQ,UAAWA,QAAQ,QAASA,QAAQ,mBACjG,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,OAAQ,CAAC,SAAU,OAAQ,kBAAmBJ,GACxEA,GAAzBD,EAASA,GAAUO,MAAqBC,OAAQR,EAAOS,KAAMT,EAAOS,KAAKC,WAH5E,CAIEC,MAAM,SAAWH,EAAQC,EAAMC,GAAa,aAE5C,SAASE,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAaC,EAAaC,EAAYC,GAG7C,OAFID,GAAYd,EAAkBa,EAAYG,UAAWF,GACrDC,GAAaf,EAAkBa,EAAaE,GACzCF,EAGT,SAASI,EAAeC,EAAUC,GAChCD,EAASF,UAAYP,OAAOW,OAAOD,EAAWH,WAC9CE,EAASF,UAAUK,YAAcH,EACjCA,EAASI,UAAYH,EC/BzB,IAAMI,EACE,QADFA,EAEI,UAFJA,EAGI,UAHJA,EAIK,WCAUC,EF+CnB,WE9CD,SAAAA,EAAYC,QAAiB,IAAjBA,IAAAA,EAAa,IACxB1B,KAAK0B,WAAaA,EAElB1B,KAAK2B,OAAS,GFsDZ,IAAIC,EAASH,EAAaR,UA2G1B,OAzGAW,EErDHC,aAAA,WACC7B,KAAK8B,OAAS,IAAIC,EAAAA,gBAAgB,MAClC/B,KAAKgC,QAAU,IAAID,EAAAA,gBAAgB/B,MACnCA,KAAKiC,eAAiB,IAAIC,EAAAA,QAC1BlC,KAAKmC,gBAAkB,IAAID,EAAAA,SFwDzBN,EErDHQ,gBAAA,WAAkB,IAAAC,EAAArC,KACjBA,KAAKsC,cAAgBC,EAAAA,MAAMvC,KAAK8B,OAAQ9B,KAAKiC,gBAAgBO,KAC5DC,EAAAA,uBACAC,EAAAA,KAAK,GACLC,EAAAA,KAAI,SAAAC,GACHP,EAAKQ,QAAS,EACVD,IAAUP,EAAKO,OAClBP,EAAKL,QAAQc,KAAKT,MAGpBU,EAAAA,YAAY,IAEb/C,KAAKgD,eAAiBT,EAAAA,MAAMvC,KAAKgC,QAAShC,KAAKmC,iBAAiBK,KAE/DG,EAAAA,KAAI,SAAAM,GACHZ,EAAKa,sBAENH,EAAAA,YAAY,KFoDXnB,EEhDHsB,iBAAA,WACC,MAAO,IFmDLtB,EEhDHuB,SAAA,SAASP,GAUR,OATI5C,KAAKiD,SAAWzB,EAEnBxB,KAAK2B,OAAS,IAId3B,KAAK2B,OAAS3B,KAAK0B,WAAW0B,KAAI,SAAAC,GAAC,OAAIA,EAAET,MAAQU,QAAO,SAAAD,GAAC,OAAU,OAANA,KAC7DrD,KAAKiD,OAAgC,IAAvBjD,KAAK2B,OAAOtB,OAAemB,EAAmBA,GAEtDxB,KAAK2B,QFwDVd,EAAaY,EAAc,CAAC,CAC1Bb,IAAK,QACL2C,IAAK,WEvDI,OAAOvD,KAAKiD,SAAWzB,IF0D/B,CACDZ,IAAK,UACL2C,IAAK,WE3DM,OAAOvD,KAAKiD,SAAWzB,IF8DjC,CACDZ,IAAK,UACL2C,IAAK,WE/DM,OAAOvD,KAAKiD,SAAWzB,IFkEjC,CACDZ,IAAK,WACL2C,IAAK,WEnEO,OAAOvD,KAAKiD,SAAWzB,IFsElC,CACDZ,IAAK,UACL2C,IAAK,WEvEM,OAAOvD,KAAKiD,SAAWzB,IF0EjC,CACDZ,IAAK,QACL2C,IAAK,WE3EI,OAAOvD,KAAK6C,SF8EpB,CACDjC,IAAK,WACL2C,IAAK,WE/EO,OAAQvD,KAAK6C,SFkFxB,CACDjC,IAAK,UACL2C,IAAK,WEnFM,OAAOvD,KAAKwD,UFsFvBC,IAAK,SEnFEC,GACX1D,KAAKwD,SAAWE,EAChB1D,KAAKgC,QAAQc,KAAK9C,QFqFb,CACDY,IAAK,YACL2C,IAAK,WE3FQ,OAAQvD,KAAKwD,WF8FzB,CACD5C,IAAK,QACL2C,IAAK,WEzFI,OAAOvD,KAAK2D,QF4FrBF,IAAK,SE1FAb,GACT5C,KAAK2D,OAASf,EACd5C,KAAK8B,OAAOgB,KAAKF,OF8FRnB,EAtHT,GGjDmBmC,EH4KnB,SAAUC,GG3KX,SAAAD,EAAYhB,EAAclB,GAAY,IAAAW,EAAA,YAAA,IAA1BO,IAAAA,EAAQ,OACnBP,EAAAwB,EAAAC,KAAA9D,KAAM0B,IAAN1B,MACK2D,OAASf,EACdP,EAAKR,eACLQ,EAAKD,kBACLC,EAAKL,QAAQc,KH0Bb,SAAgClD,GAC9B,QAAa,IAATA,EACF,MAAM,IAAImE,eAAe,6DAG3B,OAAOnE,EG/BToE,CAAA3B,IALqCA,EHuMnC,OA3BAnB,EAAe0C,EAAaC,GAqBfD,EAAY3C,UGzL5BiC,iBAAA,WACC,OAAOlD,KAAKmD,SAASnD,KAAK4C,QH8LjBgB,EA5BT,CG5KuCnC,GCIpBwC,EJyMnB,SAAUJ,GIxMX,SAAAI,EAAYC,EAAexC,GAAY,IAAAW,EAAA,YAAA,IAA3B6B,IAAAA,EAAW,KACtB7B,EAAAwB,EAAAC,KAAA9D,KAAM0B,IAAN1B,MACKkE,SAAW7B,EAAK8B,WAAWD,GAChC7B,EAAKR,eACLQ,EAAKD,kBAJiCC,EJyMpCnB,EAAe+C,EAAWJ,GAoB1B,IAAIjC,EAASqC,EAAUhD,UA+IvB,OA7IAW,EIvNHC,aAAA,WAAe,IAAAuC,EAAApE,KACdA,KAAK8B,OAAS,IAAIC,EAAAA,gBAAgB,MAClC/B,KAAKgC,QAAU,IAAID,EAAAA,gBAAgB/B,MAEnC,IAAMiC,EAAiBjC,KAAKqE,SAAQ,SAACC,EAAaC,GAGjD,OADAD,EAAYE,KAAKD,EAAQzC,QAClBwC,IACL,IAEHtE,KAAKiC,eAAiBwC,EAAAA,cAAcxC,GAAgBO,KACnDY,EAAAA,KAAI,SAAAsB,GAAM,OAAIN,EAAKxB,SAgBnBG,EAAAA,YAAY,IAGb,IAAMZ,EAAkBnC,KAAKqE,SAAQ,SAACC,EAAaC,GAGlD,OADAD,EAAYE,KAAKD,EAAQvB,gBAClBsB,IACL,IAEHtE,KAAKmC,gBAAkBsC,EAAAA,cAActC,GAAiBK,KAMrDO,EAAAA,YAAY,KJ4NXnB,EIvNHuB,SAAA,SAASP,GACR,GAAI5C,KAAKiD,SAAWzB,EAEnBxB,KAAK2B,OAAS,OACR,CAGN,IAAIA,EAAS3B,KAAK0B,WAAW0B,KAAI,SAAAC,GAAC,OAAIA,EAAET,MAAQU,QAAO,SAAAD,GAAC,OAAU,OAANA,KAC5D1B,EAAS3B,KAAKqE,SAAQ,SAAC1C,EAAQ4C,GAC9B,OAAO5C,EAAOgD,OAAOJ,EAAQ5C,UAC3BA,GACH3B,KAAKiD,OAAgC,IAAvBjD,KAAK2B,OAAOtB,OAAemB,EAAmBA,EAE7D,OAAOxB,KAAK2B,QJ+NVC,EI5NHgD,UAAA,SAAUL,GACT,OAAOA,aAAmB9C,EAAe8C,EAAU,IAAIX,EAAYW,EAASvE,KAAK0B,aJ+N/EE,EI5NHuC,WAAA,SAAWD,GAAe,IAAAW,EAAA7E,KAIzB,YAJyB,IAAfkE,IAAAA,EAAW,IACrBxD,OAAOoE,KAAKZ,GAAUa,SAAQ,SAAAnE,GAC7BsD,EAAStD,GAAOiE,EAAKD,UAAUV,EAAStD,OAElCsD,GJqOLtC,EIlOHoD,SAAA,SAASC,GAAU,IAAAC,EAAAlF,KAClBU,OAAOoE,KAAK9E,KAAKkE,UAAUa,SAAQ,SAAAI,GAAC,OAAIF,EAASC,EAAKhB,SAASiB,GAAIA,OJyOjEvD,EItOHyC,QAAA,SAAQY,EAAUrC,GAIjB,OAHA5C,KAAKgF,UAAS,SAACT,EAAS3D,GACvBgC,EAAQqC,EAASrC,EAAO2B,EAAS3D,MAE3BgC,GJyOLhB,EItOHwD,KAAA,SAAKxE,EAAKgC,GACT,OAAO5C,KAAKqE,SAAQ,SAACzB,EAAO2B,GAC3B,OAAO3B,GAAS2B,EAAQ3D,KAASgC,KAC/B,IJyODhB,EItOHyD,KAAA,SAAKzE,EAAKgC,GACT,OAAO5C,KAAKqE,SAAQ,SAACzB,EAAO2B,GAC3B,OAAO3B,GAAS2B,EAAQ3D,KAASgC,KAC/B,IJyODhB,EItOH2B,IAAA,SAAI3C,GACH,OAAOZ,KAAKkE,SAAStD,IJyOnBC,EAAaoD,EAAW,CAAC,CACvBrD,IAAK,UACL2C,IAAK,WIvOT,OAAOvD,KAAKqE,SAAQ,SAACzB,EAAO2B,GAC3B,OAAO3B,GAAS2B,EAAQb,WACtB,IJ0OCD,IAAK,SIvOEC,GAEX1D,KAAKgF,UAAS,SAAAT,GACbA,EAAQb,QAAUA,KAEnB1D,KAAKgC,QAAQc,KAAK9C,QJyOb,CACDY,IAAK,QACL2C,IAAK,WIvOT,OAAOvD,KAAKqE,SAAQ,SAACzB,EAAO2B,EAAS3D,GAEpC,OADAgC,EAAMhC,GAAO2D,EAAQ3B,MACdA,IACL,KJ0OCa,IAAK,SIvOAb,QJ0OAqB,EApKT,CIzMqCxC,GCNhC,SAAS6D,EAAkB1C,GAEjC,OAAiB,MAATA,GAAkC,IAAjBA,EAAMvC,OAAgB,WAAa,KLyX3D,IMvXmBkF,ENyXnB,SAAUC,GAGR,SAASD,IACP,OAAOC,EAAWC,MAAMzF,KAAM0F,YAAc1F,KAmB9C,OAtBAkB,EAAeqE,EAAcC,GAMhBD,EAAatE,UM9X7B0E,OAAA,WACC,IAAMC,EAAQ5F,KAAK4F,MAAQ,IAAI3B,EAAU,CACxC4B,UAAW,OACXC,SAAU,aACR,CAACR,IACJM,EAAMtD,cAAcyD,WAAU,SAAAC,GAC7BC,QAAQC,IAAI,mCAAoCF,MAEjDJ,EAAM5C,eAAe+C,WAAU,WAE9BE,QAAQC,IAAI,2BAA4BN,EAAMO,WNoYtCZ,EAvBT,CMzXwCa,EAAAA,WAkB1Cb,EAAac,KAAO,CACnBC,SAAU,mBNmYT,IOvZIC,EAAgB,CAAC,YAAa,UAAW,WAAY,QAAS,UAAW,UAAW,WAAY,QAAS,WAE1FC,EPyZnB,SAAUhB,GAGR,SAASgB,IACP,OAAOhB,EAAWC,MAAMzF,KAAM0F,YAAc1F,KAH9CkB,EAAesF,EAAchB,GAM7B,IAAI5D,EAAS4E,EAAavF,UAmG1B,OAjGAW,EOhaH+D,OAAA,WAEC,IACMc,EADUC,EAAAA,OAAOC,WAAW3G,MACbyG,KACrBzG,KAAKyG,KAAOA,EAGZzG,KAAK4G,SAAW5G,KAAK4G,SAASC,KAAK7G,MACnCA,KAAK8G,OAAS9G,KAAK8G,OAAOD,KAAK7G,MAE/ByG,EAAKM,iBAAiB,QAAS/G,KAAK4G,UACpCH,EAAKM,iBAAiB,SAAU/G,KAAK4G,UACrCH,EAAKM,iBAAiB,OAAQ/G,KAAK8G,SPmajClF,EO/ZHoF,UAAA,SAAUC,GAAS,IAAA5E,EAAArC,KAGZyG,EADUC,EAAAA,OAAOC,WAAW3G,MACbyG,KAEf7F,EAAM6F,EAAKS,iBAAiB,UAAUtE,MAEtC2B,EAAUvE,KAAKmH,UAAU5D,IAAI3C,GAEnC2D,EAAQjC,cAAcE,KACrB4E,EAAAA,UAAUpH,KAAKqH,eACdtB,WAAU,SAAAnD,GACXqD,QAAQC,IAAI,iCAAkCtD,MAE/C2B,EAAQvB,eAAeR,KACtB4E,EAAAA,UAAUpH,KAAKqH,eACdtB,WAAU,SAAA9C,GACX,IAAMqE,EAAMjF,EAAKkF,OAAOd,GACxBa,EAAIE,YAAc,GAClBjB,EAAcxB,SAAQ,SAAA1B,GACjBkB,EAAQlB,IACXoD,EAAKgB,UAAUC,IAAIrE,GACnBiE,EAAIE,aAAenE,EAAI,MAEvBoD,EAAKgB,UAAUE,OAAOtE,MAGxBkB,EAAQ5C,OAAOoD,SAAQ,SAAA1B,GAAC,OAAIiE,EAAIE,aAAJ,WAA8BnE,EAA9B,WAE7BrD,KAAK4H,WAAWrD,EAAQ3B,QPmatBhB,EO/ZHgG,WAAA,SAAWhF,GACM8D,EAAAA,OAAOC,WAAW3G,MACbyG,KAChBoB,aAAa,QAAkB,MAATjF,EAAgB,GAAKA,IPka9ChB,EO/ZHkG,iBAAA,SAAiBC,GACArB,EAAAA,OAAOC,WAAW3G,MACbyG,KAChBoB,aAAa,WAAYE,IPka5BnG,EO/ZH2F,OAAA,SAAOd,GACN,IAAIa,EAAMb,EAAKuB,gBAKf,OAJKV,GAAwB,IAAjBA,EAAIW,WACfX,EAAMY,SAASC,eAAe,IAC9B1B,EAAK2B,WAAWC,aAAaf,EAAKb,IAE5Ba,GPoaL1F,EOjaHgF,SAAA,SAAS0B,GACR,IACM7B,EADUC,EAAAA,OAAOC,WAAW3G,MACbyG,KAEf7F,EAAM6F,EAAKS,iBAAiB,UAAUtE,MAC5B5C,KAAKmH,UAAU5D,IAAI3C,GAK3BgC,MAAQ6D,EAAK7D,OPoanBhB,EOjaH2G,QAAA,SAAQD,KPmaL1G,EOjaHkF,OAAA,SAAOwB,GAEN,IAGM1H,EAHU8F,EAAAA,OAAOC,WAAW3G,MACbyG,KAEJS,iBAAiB,UAAUtE,MAC5B5C,KAAKmH,UAAU5D,IAAI3C,GAE3B8C,SAAU,GPoaT8C,EA1GT,COzZwCJ,EAAAA,WAmG1CI,EAAaH,KAAO,CACnBC,SAAU,wBACVkC,OAAQ,CAAC,cPqaR3I,EAAO6G,OQ3gBF+B,IAAI,CACVC,UAAW,CACVC,EAAAA,eACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,mBACAC,EAAAA,eACAxC,GAEDyC,MAAO,CACNC,EAAAA,UAEDC,UAAW5D","file":"docs/js/main.min.js","sourcesContent":[null,"const FormStatus = {\n\tValid: 'valid',\n\tInvalid: 'invalid',\n\tPending: 'pending',\n\tDisabled: 'disabled',\n};\n\nexport default FormStatus;\n","import { BehaviorSubject, merge, Subject } from \"rxjs\";\nimport { distinctUntilChanged, shareReplay, skip, tap } from 'rxjs/operators';\nimport FormStatus from './form-status';\n\nexport default class FormAbstract {\n\tconstructor(validators = []) {\n\t\tthis.validators = validators;\n\t\t// this.errors = {};\n\t\tthis.errors = [];\n\t}\n\n\tinitSubjects() {\n\t\tthis.value$ = new BehaviorSubject(null);\n\t\tthis.status$ = new BehaviorSubject(this);\n\t\tthis.childrenValue$ = new Subject();\n\t\tthis.childrenStatus$ = new Subject();\n\t}\n\n\tinitObservables() {\n\t\tthis.valueChanges$ = merge(this.value$, this.childrenValue$).pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tskip(1),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tif (value === this.value) {\n\t\t\t\t\tthis.status$.next(this);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.statusChanges$ = merge(this.status$, this.childrenStatus$).pipe(\n\t\t\t// auditTime(1),\n\t\t\ttap(status => {\n\t\t\t\tthis.reduceValidators();\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\treduceValidators() {\n\t\treturn [];\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tthis.errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tget valid() { return this.status === FormStatus.Valid; }\n\tget invalid() { return this.status === FormStatus.Invalid; }\n\tget pending() { return this.status === FormStatus.Pending; }\n\tget disabled() { return this.status === FormStatus.Disabled; }\n\tget enabled() { return this.status !== FormStatus.Disabled; }\n\tget dirty() { return this.dirty_; }\n\tget pristine() { return !this.dirty_; }\n\tget touched() { return this.touched_; }\n\tget untouched() { return !this.touched_; }\n\n\tset touched(touched) {\n\t\tthis.touched_ = touched;\n\t\tthis.status$.next(this);\n\t}\n\n\tget value() { return this.value_; }\n\n\tset value(value) {\n\t\tthis.value_ = value;\n\t\tthis.value$.next(value);\n\t}\n\n}\n","import FormAbstract from \"./form-abstract\";\n\nexport default class FormControl extends FormAbstract {\n\tconstructor(value = null, validators) {\n\t\tsuper(validators);\n\t\tthis.value_ = value;\n\t\tthis.initSubjects();\n\t\tthis.initObservables();\n\t\tthis.status$.next(this);\n\t}\n\n\treduceValidators() {\n\t\treturn this.validate(this.value);\n\t}\n}\n","import { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport FormAbstract from './form-abstract';\nimport FormControl from './form-control';\nimport FormStatus from './form-status';\n\nexport default class FormGroup extends FormAbstract {\n\tconstructor(controls = {}, validators) {\n\t\tsuper(validators);\n\t\tthis.controls = this.asControls(controls);\n\t\tthis.initSubjects();\n\t\tthis.initObservables();\n\t\t// this.status$.next(this);\n\t}\n\n\tinitSubjects() {\n\t\tthis.value$ = new BehaviorSubject(null);\n\t\tthis.status$ = new BehaviorSubject(this);\n\t\t// VALUE\n\t\tconst childrenValue$ = this.reduce_((observables, control) => {\n\t\t\t// console.log(observables, control);\n\t\t\tobservables.push(control.value$);\n\t\t\treturn observables;\n\t\t}, []);\n\t\t// console.log('childrenValue$', childrenValue$);\n\t\tthis.childrenValue$ = combineLatest(childrenValue$).pipe(\n\t\t\tmap(latest => this.value),\n\t\t\t// distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n\t\t\t// this.dirty_ = this.any_('dirty_', true);\n\t\t\t/*\n\t\t\tmap(merged => {\n\t\t\t\tconst values = {};\n\t\t\t\tObject.keys(this.controls).forEach((key, i) => {\n\t\t\t\t\tvalues[key] = merged[i] || null;\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t}),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tthis.status$.next(this);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\t\t// STATUS\n\t\tconst childrenStatus$ = this.reduce_((observables, control) => {\n\t\t\t// console.log(observables, control);\n\t\t\tobservables.push(control.statusChanges$);\n\t\t\treturn observables;\n\t\t}, []);\n\t\t// console.log('childrenStatus$', childrenStatus$);\n\t\tthis.childrenStatus$ = combineLatest(childrenStatus$).pipe(\n\t\t\t/*\n\t\t\ttap(controls => {\n\t\t\t\tthis.dirty_ = this.any_('dirty_', true);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tlet errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\terrors = this.reduce_((errors, control) => {\n\t\t\t\treturn errors.concat(control.errors);\n\t\t\t}, errors);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tasControl(control) {\n\t\treturn control instanceof FormAbstract ? control : new FormControl(control, this.validators);\n\t}\n\n\tasControls(controls = {}) {\n\t\tObject.keys(controls).forEach(key => {\n\t\t\tcontrols[key] = this.asControl(controls[key]);\n\t\t});\n\t\treturn controls;\n\t}\n\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(k => callback(this.controls[k], k));\n\t}\n\n\treduce_(callback, value) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tvalue = callback(value, control, key);\n\t\t});\n\t\treturn value;\n\t}\n\n\tall_(key, value) {\n\t\treturn this.reduce_((value, control) => {\n\t\t\treturn value && control[key] === value;\n\t\t}, true);\n\t}\n\n\tany_(key, value) {\n\t\treturn this.reduce_((value, control) => {\n\t\t\treturn value || control[key] === value;\n\t\t}, false);\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tget touched() {\n\t\treturn this.reduce_((value, control) => {\n\t\t\treturn value && control.touched;\n\t\t}, true);\n\t}\n\n\tset touched(touched) {\n\t\t// this.touched_ = touched;\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.touched = touched;\n\t\t});\n\t\tthis.status$.next(this);\n\t}\n\n\tget value() {\n\t\treturn this.reduce_((value, control, key) => {\n\t\t\tvalue[key] = control.value;\n\t\t\treturn value;\n\t\t}, {});\n\t}\n\n\tset value(value) {}\n\n}\n","export function RequiredValidator(value) {\n\t// return (value == null || value.length === 0) ? { required: true } : null;\n\treturn (value == null || value.length === 0) ? 'required' : null;\n}\n","import { Component } from 'rxcomp';\nimport FormGroup from './form/form-group';\nimport { RequiredValidator } from './form/form-validators';\n\nexport default class AppComponent extends Component {\n\n\tonInit() {\n\t\tconst group = this.group = new FormGroup({\n\t\t\tfirstName: 'Jhon',\n\t\t\tlastName: 'Appleseed',\n\t\t}, [RequiredValidator]);\n\t\tgroup.valueChanges$.subscribe(values => {\n\t\t\tconsole.log('AppComponent.group.valueChanges$', values);\n\t\t});\n\t\tgroup.statusChanges$.subscribe(() => {\n\t\t\t// console.log('AppComponent.group.statusChanges$');\n\t\t\tconsole.log('AppComponent.group.valid', group.valid);\n\t\t});\n\t}\n\n}\n\nAppComponent.meta = {\n\tselector: '[app-component]',\n};\n","import { Component, Module } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\n\nconst AccessorProps = ['untouched', 'touched', 'pristine', 'dirty', 'pending', 'enabled', 'disabled', 'valid', 'invalid'];\n\nexport default class FormAccessor extends Component {\n\n\tonInit() {\n\t\t// context\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tthis.node = node;\n\t\t// log(node.getAttributeNode('formControl').value);\n\t\t// log('name', node.name);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\tnode.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormAccessor.onChanges', changes);\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\t// console.log(key, this.formGroup);\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\tcontrol.valueChanges$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(value => {\n\t\t\tconsole.log('Accessor.control.valueChanges$', value);\n\t\t});\n\t\tcontrol.statusChanges$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(status => {\n\t\t\tconst pre = this.getPre(node);\n\t\t\tpre.textContent = '';\n\t\t\tAccessorProps.forEach(x => {\n\t\t\t\tif (control[x]) {\n\t\t\t\t\tnode.classList.add(x);\n\t\t\t\t\tpre.textContent += x + ', ';\n\t\t\t\t} else {\n\t\t\t\t\tnode.classList.remove(x);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcontrol.errors.forEach(x => pre.textContent += `invalid-${x}, `);\n\t\t});\n\t\tthis.writeValue(control.value);\n\t\t// node.value = 'test';\n\t}\n\n\twriteValue(value) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tnode.setAttribute('value', value == null ? '' : value);\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\tnode.setAttribute('disabled', disabled);\n\t}\n\n\tgetPre(node) {\n\t\tlet pre = node.previousSibling;\n\t\tif (!pre || pre.nodeType !== 3) {\n\t\t\tpre = document.createTextNode('');\n\t\t\tnode.parentNode.insertBefore(pre, node);\n\t\t}\n\t\treturn pre;\n\t}\n\n\tonChange(event) {\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\t// event.currentTarget;\n\t\t// log(event.type, node.name, node.value, node.checked);\n\t\t// log('control', key, control.value);\n\t\tcontrol.value = node.value;\n\t}\n\n\tonFocus(event) {}\n\n\tonBlur(event) {\n\t\t// log(event.type);\n\t\tconst context = Module.getContext(this);\n\t\tconst node = context.node;\n\t\t// const key = node.getAttributeNode('formControl').value;\n\t\tconst key = node.getAttributeNode('[name]').value;\n\t\tconst control = this.formGroup.get(key);\n\t\t// const control = group.controls[key]; // FORM[key];\n\t\tcontrol.touched = true;\n\t}\n}\n\nFormAccessor.meta = {\n\tselector: 'input,textarea,select',\n\tinputs: ['formGroup'],\n};\n","import { ClassDirective, EventDirective, ForStructure, IfStructure, InnerHtmlDirective, JsonPipe, Module, StyleDirective } from 'rxcomp';\nimport AppComponent from './app.component';\nimport FormAccessor from './form/form-accessor';\n\nModule.use({\n\tfactories: [\n\t\tClassDirective,\n\t\tEventDirective,\n\t\tForStructure,\n\t\tIfStructure,\n\t\tInnerHtmlDirective,\n\t\tStyleDirective,\n\t\tFormAccessor,\n\t],\n\tpipes: [\n\t\tJsonPipe,\n\t],\n\tbootstrap: AppComponent,\n});\n"]}