[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/form/directives/form-abstract-collection.directive.js",
    "content": "import { Directive, getContext } from 'rxcomp';\nimport { FormAttributes } from '../models/form-status';\n\n/**\n * @desc Abstract class representing a FormAbstractCollectionDirective.\n * @abstract\n * @access public\n */\nexport default class FormAbstractCollectionDirective extends Directive {\n\n\tget control() {\n\t\treturn {};\n\t}\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tconst control = this.control;\n\t\tFormAttributes.forEach(x => {\n\t\t\tif (control[x]) {\n\t\t\t\tnode.classList.add(x);\n\t\t\t} else {\n\t\t\t\tnode.classList.remove(x);\n\t\t\t}\n\t\t});\n\t}\n\n}\n\nFormAbstractCollectionDirective.meta = {\n\t// no selection, abstract class\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-abstract-collection.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "FormAbstractCollectionDirective",
    "memberof": "src/form/directives/form-abstract-collection.directive.js",
    "static": true,
    "longname": "src/form/directives/form-abstract-collection.directive.js~FormAbstractCollectionDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-abstract-collection.directive.js",
    "importStyle": "FormAbstractCollectionDirective",
    "description": "Abstract class representing a FormAbstractCollectionDirective.",
    "lineNumber": 9,
    "abstract": true,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 2,
    "kind": "get",
    "name": "control",
    "memberof": "src/form/directives/form-abstract-collection.directive.js~FormAbstractCollectionDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract-collection.directive.js~FormAbstractCollectionDirective#control",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/directives/form-abstract-collection.directive.js~FormAbstractCollectionDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract-collection.directive.js~FormAbstractCollectionDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 4,
    "kind": "file",
    "name": "src/form/directives/form-abstract.directive.js",
    "content": "import { Directive, getContext } from 'rxcomp';\nimport { FormAttributes } from '../models/form-status';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\n\n/**\n * @desc Abstract class representing a FormAbstractDirective.\n * @abstract\n * @access public\n */\nexport default class FormAbstractDirective extends Directive {\n\n\tget control() {\n\t\tif (this.formControl) {\n\t\t\treturn this.formControl;\n\t\t} else {\n\t\t\tif (!this.host) {\n\t\t\t\tthrow ('missing form collection');\n\t\t\t}\n\t\t\treturn this.host.control.get(this.formControlName);\n\t\t}\n\t}\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tthis.node = node;\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\tnode.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tif (this.formControlName) {\n\t\t\tnode.name = this.formControlName;\n\t\t}\n\t\tconst control = this.control;\n\t\t/*\n\t\t// remove all invalids then\n\t\tObject.keys(control.errors).forEach(key => {\n\t\t\tnode.classList.add(`invalid-${key}`);\n\t\t});\n\t\t*/\n\t\tFormAttributes.forEach(x => {\n\t\t\tif (control[x]) {\n\t\t\t\tnode.classList.add(x);\n\t\t\t} else {\n\t\t\t\tnode.classList.remove(x);\n\t\t\t}\n\t\t});\n\t\tthis.writeValue(control.value);\n\t}\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\t// node.setAttribute('value', value == null ? '' : value);\n\t\tnode.value = value == null ? '' : value;\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\tthis.control.value = node.value === '' ? null : node.value;\n\t}\n\n\tonBlur(event) {\n\t\tthis.control.touched = true;\n\t}\n\n\t// onFocus(event) {}\n\n\tsetDisabledState(disabled) {\n\t\tconst { node } = getContext(this);\n\t\tnode.disabled = disabled;\n\t\t// node.setAttribute('disabled', disabled);\n\t}\n\n}\n\nFormAbstractDirective.meta = {\n\t// no selection, abstract class\n\tinputs: ['formControl', 'formControlName', 'value'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n\n/*\n\nLEGACY\nbutton: \t\tA push button with no default behavior.\ncheckbox: \t\tA check box allowing single values to be selected/deselected.\nfile: \t\t\tA control that lets the user select a file. Use the accept attribute to define the types of files that the control can select.\nhidden: \t\tA control that is not displayed but whose value is submitted to the server.\nimage: \t\t\tA graphical submit button. You must use the src attribute to define the source of the image and the alt attribute to define alternative text. You can use the height and width attributes to define the size of the image in pixels.\npassword: \t\tA single-line text field whose value is obscured. Use the maxlength and minlength attributes to specify the maximum length of the value that can be entered.\n\t\t\t\tNote: Any forms involving sensitive information like passwords (e.g. login forms) should be served over HTTPS;\n\t\t\t\tFirefox now implements multiple mechanisms to warn against insecure login forms — see Insecure passwords.\n\t\t\t\tOther browsers are also implementing similar mechanisms.\n\nradio: \t\t\tA radio button, allowing a single value to be selected out of multiple choices.\nreset: \t\t\tA button that resets the contents of the form to default values.\nsubmit: \t\tA button that submits the form.\ntext: \t\t\tA single-line text field. Line-breaks are automatically removed from the input value.\n\n*/\n\n/*\n\nHTML5\ncolor: \t\t\t(ie) A control for specifying a color. A color picker's UI has no required features other than accepting simple colors as text (more info).\ndate: \t\t\t(ie) A control for entering a date (year, month, and day, with no time).\ndatetime-local: (ie) A control for entering a date and time, with no time zone.\nemail: \t\t\tA field for editing an e-mail address.\nmonth: \t\t\t(ie) A control for entering a month and year, with no time zone.\nnumber: \t\tA control for entering a number.\nrange: \t\t\tA control for entering a number whose exact value is not important.\nsearch: \t\tA single-line text field for entering search strings. Line-breaks are automatically removed from the input value.\ntel: \t\t\tA control for entering a telephone number.\ntime: \t\t\t(ie) A control for entering a time value with no time zone.\nurl: \t\t\tA field for entering a URL.\nweek: \t\t\t(ie) A control for entering a date consisting of a week-year number and a week number with no time zone.\n\n*/\n\n/*\n\nATTRIBUTES\nautocomplete\tA string indicating the type of autocomplete functionality, if any, to allow on the input\nautofocus\t\tA Boolean which, if present, makes the input take focus when the form is presented\ndisabled\t\tA Boolean attribute which is present if the input should be disabled\nform\t\t\tThe id of the <form> of which the input is a member; if absent, the input is a member of the nearest containing form, or is not a member of a form at all\nlist\t\t\tThe id of a <datalist> element that provides a list of suggested values for the input\nname\t\t\tThe input's name, to identify the input in the data submitted with the form's data\nreadonly\t\tA Boolean attribute which, if true, indicates that the input cannot be edited\nrequired\t\tA Boolean which, if true, indicates that the input must have a value before the form can be submitted\ntabindex\t\tA numeric value providing guidance to the user agent as to the order in which controls receive focus when the user presses the Tab key\ntype\t\t\tA string indicating which input type the <input> element represents\nvalue\t\t\tThe input's current value\n\n*/\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-abstract.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 5,
    "kind": "class",
    "name": "FormAbstractDirective",
    "memberof": "src/form/directives/form-abstract.directive.js",
    "static": true,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-abstract.directive.js",
    "importStyle": "FormAbstractDirective",
    "description": "Abstract class representing a FormAbstractDirective.",
    "lineNumber": 10,
    "abstract": true,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 6,
    "kind": "get",
    "name": "control",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#control",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "node",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#node",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "writeValue",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#writeValue",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "onChange",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#onBlur",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "setDisabledState",
    "memberof": "src/form/directives/form-abstract.directive.js~FormAbstractDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-abstract.directive.js~FormAbstractDirective#setDisabledState",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "disabled",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 16,
    "kind": "file",
    "name": "src/form/directives/form-array.directive.js",
    "content": "import FormAbstractCollectionDirective from './form-abstract-collection.directive';\n\n/**\n * @desc FormArrayDirective.\n * @example\n * <form [formArray]=\"form\" (submit)=\"onSubmit()\" role=\"form\" novalidate autocomplete=\"off\">\n * \t...\n * </form>\n */\nexport default class FormArrayDirective extends FormAbstractCollectionDirective {\n\n\tget control() {\n\t\t// console.log('FormArrayDirective', (this.formArrayName ? `formArrayName ${this.formArrayName}` : `formArray ${this.formArray}`));\n\t\tif (this.formArray) {\n\t\t\treturn this.formArray;\n\t\t} else {\n\t\t\tif (!this.host) {\n\t\t\t\tthrow ('missing form collection');\n\t\t\t}\n\t\t\treturn this.host.control.get(this.formArrayName);\n\t\t}\n\t}\n\n}\n\nFormArrayDirective.meta = {\n\tselector: '[formArray],[formArrayName]',\n\tinputs: ['formArray', 'formArrayName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-array.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 17,
    "kind": "class",
    "name": "FormArrayDirective",
    "memberof": "src/form/directives/form-array.directive.js",
    "static": true,
    "longname": "src/form/directives/form-array.directive.js~FormArrayDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-array.directive.js",
    "importStyle": "FormArrayDirective",
    "description": "FormArrayDirective.",
    "examples": [
      "<form [formArray]=\"form\" (submit)=\"onSubmit()\" role=\"form\" novalidate autocomplete=\"off\">\n\t...\n</form>"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract-collection.directive~FormAbstractCollectionDirective"
    ]
  },
  {
    "__docId__": 18,
    "kind": "get",
    "name": "control",
    "memberof": "src/form/directives/form-array.directive.js~FormArrayDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-array.directive.js~FormArrayDirective#control",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/form/directives/form-checkbox.directive.js",
    "content": "import { getContext } from 'rxcomp';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\nimport FormAbstractDirective from './form-abstract.directive';\n\n/**\n * @desc FormCheckboxDirective.\n * @example\n * <input type=\"checkbox\" formControlName=\"privacy\" [value]=\"true\" requiredTrue />\n * @example\n * <input type=\"checkbox\" [formControl]=\"control\" [value]=\"true\" requiredTrue />\n */\nexport default class FormCheckboxDirective extends FormAbstractDirective {\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tthis.node = node;\n\t\t// log(node.getAttributeNode('formControl').value);\n\t\t// log('name', node.name);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\t// node.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\tvalue === this.value ? node.setAttribute('checked', value) : node.removeAttribute('checked');\n\t\t/*\n\t\tconst checked = (node.value === value);\n\t\tif (node.checked !== checked) {\n\t\t\tnode.checked = checked;\n\t\t}\n\t\t*/\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst { node } = getContext(this);\n\t\tnode.disabled = disabled;\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\tthis.control.value = node.checked ? this.value : (this.value === true ? false : null);\n\t}\n\n\tonBlur(event) {\n\t\tthis.control.touched = true;\n\t}\n\n\t// onFocus(event) {}\n\n}\n\nFormCheckboxDirective.meta = {\n\tselector: 'input[type=checkbox][formControl],input[type=checkbox][formControlName]',\n\tinputs: ['formControl', 'formControlName', 'value'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n\n/*\n\nATTRIBUTES\nautocomplete\tA string indicating the type of autocomplete functionality, if any, to allow on the input\nautofocus\t\tA Boolean which, if present, makes the input take focus when the form is presented\ndisabled\t\tA Boolean attribute which is present if the input should be disabled\nform\t\t\tThe id of the <form> of which the input is a member; if absent, the input is a member of the nearest containing form, or is not a member of a form at all\nlist\t\t\tThe id of a <datalist> element that provides a list of suggested values for the input\nname\t\t\tThe input's name, to identify the input in the data submitted with the form's data\nreadonly\t\tA Boolean attribute which, if true, indicates that the input cannot be edited\nrequired\t\tA Boolean which, if true, indicates that the input must have a value before the form can be submitted\ntabindex\t\tA numeric value providing guidance to the user agent as to the order in which controls receive focus when the user presses the Tab key\ntype\t\t\tA string indicating which input type the <input> element represents\nvalue\t\t\tThe input's current value\n\n*/\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-checkbox.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "FormCheckboxDirective",
    "memberof": "src/form/directives/form-checkbox.directive.js",
    "static": true,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-checkbox.directive.js",
    "importStyle": "FormCheckboxDirective",
    "description": "FormCheckboxDirective.",
    "examples": [
      "<input type=\"checkbox\" formControlName=\"privacy\" [value]=\"true\" requiredTrue />",
      "<input type=\"checkbox\" [formControl]=\"control\" [value]=\"true\" requiredTrue />"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract.directive~FormAbstractDirective"
    ]
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "node",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#node",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "writeValue",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#writeValue",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 26,
    "kind": "method",
    "name": "setDisabledState",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#setDisabledState",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "disabled",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "onChange",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-checkbox.directive.js~FormCheckboxDirective#onBlur",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "src/form/directives/form-field.component.js",
    "content": "import { Component, getContext } from \"rxcomp\";\nimport { FormAttributes } from '../models/form-status';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\n\n/**\n * @desc FormFieldComponent.\n * @example\n * <div formFieldName=\"firstName\">\n *\t<input type=\"text\" [formControl]=\"control\" />\n * </div>\n */\nexport default class FormFieldComponent extends Component {\n\n\tget control() {\n\t\t// console.log('FormFieldComponent', (this.formFieldName ? `formFieldName ${this.formFieldName}` : `formField ${this.formField}`));\n\t\tif (this.formField) {\n\t\t\treturn this.formField;\n\t\t} else {\n\t\t\tif (!this.host) {\n\t\t\t\tthrow ('missing form collection');\n\t\t\t}\n\t\t\treturn this.host.control.get(this.formFieldName);\n\t\t}\n\t}\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tconst control = this.control;\n\t\tFormAttributes.forEach(x => {\n\t\t\tif (control[x]) {\n\t\t\t\tnode.classList.add(x);\n\t\t\t} else {\n\t\t\t\tnode.classList.remove(x);\n\t\t\t}\n\t\t});\n\t}\n\n}\n\nFormFieldComponent.meta = {\n\tselector: '[formField],[formFieldName]',\n\tinputs: ['formField', 'formFieldName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-field.component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "class",
    "name": "FormFieldComponent",
    "memberof": "src/form/directives/form-field.component.js",
    "static": true,
    "longname": "src/form/directives/form-field.component.js~FormFieldComponent",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-field.component.js",
    "importStyle": "FormFieldComponent",
    "description": "FormFieldComponent.",
    "examples": [
      "<div formFieldName=\"firstName\">\n<input type=\"text\" [formControl]=\"control\" />\n</div>"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "rxcomp~Component"
    ]
  },
  {
    "__docId__": 31,
    "kind": "get",
    "name": "control",
    "memberof": "src/form/directives/form-field.component.js~FormFieldComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-field.component.js~FormFieldComponent#control",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 32,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/directives/form-field.component.js~FormFieldComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-field.component.js~FormFieldComponent#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 33,
    "kind": "file",
    "name": "src/form/directives/form-group.directive.js",
    "content": "import FormAbstractCollectionDirective from './form-abstract-collection.directive';\n\n/**\n * @desc FormGroupDirective.\n * @example\n * <form [formGroup]=\"form\" (submit)=\"onSubmit()\" role=\"form\" novalidate autocomplete=\"off\">\n * \t...\n * </form>\n */\nexport default class FormGroupDirective extends FormAbstractCollectionDirective {\n\n\tget control() {\n\t\t// console.log('FormGroupDirective', (this.formGroupName ? `formGroupName ${this.formGroupName}` : `formGroup ${this.formGroup}`));\n\t\tif (this.formGroup) {\n\t\t\treturn this.formGroup;\n\t\t} else {\n\t\t\tif (!this.host) {\n\t\t\t\tthrow ('missing form collection');\n\t\t\t}\n\t\t\treturn this.host.control.get(this.formGroupName);\n\t\t}\n\t}\n\n}\n\nFormGroupDirective.meta = {\n\tselector: '[formGroup],[formGroupName]',\n\tinputs: ['formGroup', 'formGroupName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-group.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 34,
    "kind": "class",
    "name": "FormGroupDirective",
    "memberof": "src/form/directives/form-group.directive.js",
    "static": true,
    "longname": "src/form/directives/form-group.directive.js~FormGroupDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-group.directive.js",
    "importStyle": "FormGroupDirective",
    "description": "FormGroupDirective.",
    "examples": [
      "<form [formGroup]=\"form\" (submit)=\"onSubmit()\" role=\"form\" novalidate autocomplete=\"off\">\n\t...\n</form>"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract-collection.directive~FormAbstractCollectionDirective"
    ]
  },
  {
    "__docId__": 35,
    "kind": "get",
    "name": "control",
    "memberof": "src/form/directives/form-group.directive.js~FormGroupDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-group.directive.js~FormGroupDirective#control",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 36,
    "kind": "file",
    "name": "src/form/directives/form-input.directive.js",
    "content": "import { getContext } from 'rxcomp';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\nimport FormAbstractDirective from './form-abstract.directive';\n\n/**\n * @desc FormInputDirective to handle input text FormControl value.\n * @example\n * <input type=\"text\" formControlName=\"firstName\" />\n * @example\n * <input type=\"text\" [formControl]=\"form.get('firstName')\" />\n */\nexport default class FormInputDirective extends FormAbstractDirective {\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\tnode.value = value == null ? '' : value;\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\tthis.control.value = node.value === '' ? null : node.value;\n\t}\n\n\tonBlur(event) {\n\t\tthis.control.touched = true;\n\t}\n\n}\n\nFormInputDirective.meta = {\n\tselector: 'input[type=text][formControl],input[type=text][formControlName],input[type=email][formControl],input[type=email][formControlName],input[type=password][formControl],input[type=password][formControlName],textarea[formControl],textarea[formControlName]',\n\tinputs: ['formControl', 'formControlName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-input.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 37,
    "kind": "class",
    "name": "FormInputDirective",
    "memberof": "src/form/directives/form-input.directive.js",
    "static": true,
    "longname": "src/form/directives/form-input.directive.js~FormInputDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-input.directive.js",
    "importStyle": "FormInputDirective",
    "description": "FormInputDirective to handle input text FormControl value.",
    "examples": [
      "<input type=\"text\" formControlName=\"firstName\" />",
      "<input type=\"text\" [formControl]=\"form.get('firstName')\" />"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract.directive~FormAbstractDirective"
    ]
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "writeValue",
    "memberof": "src/form/directives/form-input.directive.js~FormInputDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-input.directive.js~FormInputDirective#writeValue",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "onChange",
    "memberof": "src/form/directives/form-input.directive.js~FormInputDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-input.directive.js~FormInputDirective#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/form/directives/form-input.directive.js~FormInputDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-input.directive.js~FormInputDirective#onBlur",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "src/form/directives/form-placeholder.directive.js",
    "content": "import { Directive, getContext } from 'rxcomp';\n\n/**\n * @desc FormPlaceholderDirective.\n * @example\n * <input type=\"text\" [placeholder]=\"'item-' + index\" />\n */\nexport default class FormPlaceholderDirective extends Directive {\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tnode.placeholder = this.placeholder;\n\t}\n\n}\n\nFormPlaceholderDirective.meta = {\n\tselector: 'input[placeholder],textarea[placeholder]',\n\tinputs: ['placeholder'],\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-placeholder.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "class",
    "name": "FormPlaceholderDirective",
    "memberof": "src/form/directives/form-placeholder.directive.js",
    "static": true,
    "longname": "src/form/directives/form-placeholder.directive.js~FormPlaceholderDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-placeholder.directive.js",
    "importStyle": "FormPlaceholderDirective",
    "description": "FormPlaceholderDirective.",
    "examples": [
      "<input type=\"text\" [placeholder]=\"'item-' + index\" />"
    ],
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 43,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/directives/form-placeholder.directive.js~FormPlaceholderDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-placeholder.directive.js~FormPlaceholderDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 44,
    "kind": "file",
    "name": "src/form/directives/form-radio.directive.js",
    "content": "import { getContext } from 'rxcomp';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\nimport FormAbstractDirective from './form-abstract.directive';\n\n/**\n * @desc FormRadioDirective.\n * @example\n * <input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"one\" />\n * <input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"two\" />\n * <input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"three\" />\n */\nexport default class FormRadioDirective extends FormAbstractDirective {\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tthis.node = node;\n\t\t// log(node.getAttributeNode('formControl').value);\n\t\t// log('name', node.name);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\t// node.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\tnode.checked = (node.value === value);\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst { node } = getContext(this);\n\t\tnode.disabled = disabled;\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\tif (node.checked) {\n\t\t\tthis.control.value = node.value;\n\t\t}\n\t}\n\n\tonBlur(event) {\n\t\tthis.control.touched = true;\n\t}\n\n}\n\nFormRadioDirective.meta = {\n\tselector: 'input[type=radio][formControl],input[type=radio][formControlName]',\n\tinputs: ['formControl', 'formControlName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-radio.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 45,
    "kind": "class",
    "name": "FormRadioDirective",
    "memberof": "src/form/directives/form-radio.directive.js",
    "static": true,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-radio.directive.js",
    "importStyle": "FormRadioDirective",
    "description": "FormRadioDirective.",
    "examples": [
      "<input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"one\" />\n<input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"two\" />\n<input type=\"radio\" [formControl]=\"control\" name=\"radioGroup\" value=\"three\" />"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract.directive~FormAbstractDirective"
    ]
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "node",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#node",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "writeValue",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#writeValue",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "setDisabledState",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#setDisabledState",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "disabled",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "onChange",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/form/directives/form-radio.directive.js~FormRadioDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-radio.directive.js~FormRadioDirective#onBlur",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/form/directives/form-select.directive.js",
    "content": "import { getContext } from 'rxcomp';\nimport FormAbstractCollectionDirective from './form-abstract-collection.directive';\nimport FormAbstractDirective from './form-abstract.directive';\n\n/**\n * @desc FormSelectDirective.\n * @example\n * <select formControlName=\"country\">\n * \t<option value=\"\">select</option>\n * \t<option value=\"en-US\">English</option>\n * \t<option value=\"it-IT\">Italiano</option>\n * </select>\n * @example\n * <select [formControl]=\"control\">\n * \t<option value=\"\">select</option>\n * \t<option value=\"en-US\">English</option>\n * \t<option value=\"it-IT\">Italiano</option>\n * </select>\n */\nexport default class FormSelectDirective extends FormAbstractDirective {\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\tnode.value = value == null ? '' : value;\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst { node } = getContext(this);\n\t\tnode.disabled = disabled;\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\tthis.control.value = node.value === '' ? null : node.value;\n\t}\n\n\tonBlur(event) {\n\t\tthis.control.touched = true;\n\t}\n\n}\n\nFormSelectDirective.meta = {\n\tselector: 'select[formControl],select[formControlName]',\n\tinputs: ['formControl', 'formControlName'],\n\thosts: { host: FormAbstractCollectionDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-select.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "FormSelectDirective",
    "memberof": "src/form/directives/form-select.directive.js",
    "static": true,
    "longname": "src/form/directives/form-select.directive.js~FormSelectDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-select.directive.js",
    "importStyle": "FormSelectDirective",
    "description": "FormSelectDirective.",
    "examples": [
      "<select formControlName=\"country\">\n\t<option value=\"\">select</option>\n\t<option value=\"en-US\">English</option>\n\t<option value=\"it-IT\">Italiano</option>\n</select>",
      "<select [formControl]=\"control\">\n\t<option value=\"\">select</option>\n\t<option value=\"en-US\">English</option>\n\t<option value=\"it-IT\">Italiano</option>\n</select>"
    ],
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "src/form/directives/form-abstract.directive~FormAbstractDirective"
    ]
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "writeValue",
    "memberof": "src/form/directives/form-select.directive.js~FormSelectDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-select.directive.js~FormSelectDirective#writeValue",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "setDisabledState",
    "memberof": "src/form/directives/form-select.directive.js~FormSelectDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-select.directive.js~FormSelectDirective#setDisabledState",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "disabled",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "onChange",
    "memberof": "src/form/directives/form-select.directive.js~FormSelectDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-select.directive.js~FormSelectDirective#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/form/directives/form-select.directive.js~FormSelectDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-select.directive.js~FormSelectDirective#onBlur",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/form/directives/form-submit.directive.js",
    "content": "import { Directive, getContext } from 'rxcomp';\nimport { fromEvent } from 'rxjs';\nimport { shareReplay, takeUntil, tap } from 'rxjs/operators';\n\n/**\n * @desc FormSubmitDirective.\n * @example\n * <form (submit)=\"onSubmit()\" [formGroup]=\"form\" role=\"form\" novalidate autocomplete=\"off\">\n * \t...\n * </form>\n */\nexport default class FormSubmitDirective extends Directive {\n\n\tonInit() {\n\t\tconst { module, node, selector, parentInstance } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$ = this.event$ = fromEvent(node, event).pipe(\n\t\t\ttap(event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// console.log('event');\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('parentInstance', parentInstance);\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\n}\n\nFormSubmitDirective.meta = {\n\tselector: `[(submit)]`,\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/directives/form-submit.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "FormSubmitDirective",
    "memberof": "src/form/directives/form-submit.directive.js",
    "static": true,
    "longname": "src/form/directives/form-submit.directive.js~FormSubmitDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/directives/form-submit.directive.js",
    "importStyle": "FormSubmitDirective",
    "description": "FormSubmitDirective.",
    "examples": [
      "<form (submit)=\"onSubmit()\" [formGroup]=\"form\" role=\"form\" novalidate autocomplete=\"off\">\n\t...\n</form>"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/directives/form-submit.directive.js~FormSubmitDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/directives/form-submit.directive.js~FormSubmitDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/form/form-abstract-collection.js",
    "content": "import { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { map, shareReplay, switchAll } from 'rxjs/operators';\nimport FormAbstract from './form-abstract';\nimport FormControl from './form-control';\nimport FormStatus from './models/form-status';\n\n/**\n * @desc Abstract class representing a form collection.\n * @abstract\n * @access public\n */\nexport default class FormAbstractCollection extends FormAbstract {\n\t/**\n\t * Create a FormAbstract.\n\t * @param {Map<string, any|FormAbstract>} controls - An object containing controls.\n\t * @param {FormValidator[]} validators - A list of validators.\n\t */\n\tconstructor(controls, validators) {\n\t\tsuper(validators);\n\t\tthis.controls = controls;\n\t\tthis.initControls_(controls);\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tinitControl_(control, key) {\n\t\tcontrol = control instanceof FormAbstract ? control : new FormControl(control);\n\t\tcontrol.addValidators(...this.validators);\n\t\tcontrol.name = key;\n\t\treturn control;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tinitControls_(controls) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tthis.init(control, key);\n\t\t});\n\t\treturn controls;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tinitSubjects_() {\n\t\tthis.changesChildren = new BehaviorSubject().pipe(\n\t\t\tswitchAll()\n\t\t);\n\t\tthis.switchSubjects_();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tswitchSubjects_() {\n\t\tconst changesChildren = this.reduce_((result, control) => {\n\t\t\tresult.push(control.changes$);\n\t\t\treturn result;\n\t\t}, []);\n\t\tlet changesChildren$ = changesChildren.length ? combineLatest(changesChildren) : of (changesChildren);\n\t\tthis.changesChildren.next(changesChildren$);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tinitObservables_() {\n\t\tthis.changes$ = this.changesChildren.pipe(\n\t\t\tmap(() => this.value),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled || this.status === FormStatus.Hidden) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tlet errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\tthis.errors = this.reduce_((result, control) => {\n\t\t\t\treturn result.concat(control.errors);\n\t\t\t}, errors);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(key => callback(this.controls[key], key));\n\t}\n\n\t/**\n\t * @private\n\t */\n\treduce_(callback, result) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tresult = callback(result, control, key);\n\t\t});\n\t\treturn result;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tall_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result && control[key] === value;\n\t\t}, true);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tany_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result || control[key] === value;\n\t\t}, false);\n\t}\n\n\tget valid() { return this.all_('valid', true); }\n\tget invalid() { return this.any_('invalid', true); }\n\tget pending() { return this.any_('pending', true); }\n\tget disabled() { return this.all_('disabled', true); }\n\tget enabled() { return this.any_('enabled', true); }\n\tget hidden() { return this.all_('hidden', true); }\n\tget visible() { return this.any_('visible', true); }\n\tget submitted() { return this.all_('submitted', true); }\n\tget dirty() { return this.any_('dirty', true); }\n\tget pristine() { return this.all_('pristine', true); }\n\tget touched() { return this.all_('touched', true); }\n\tget untouched() { return this.any_('untouched', true); }\n\n\tset disabled(disabled) {\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.disabled = disabled;\n\t\t});\n\t}\n\n\tset hidden(hidden) {\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.hidden = hidden;\n\t\t});\n\t}\n\n\tset submitted(submitted) {\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.submitted = submitted;\n\t\t});\n\t}\n\n\tset touched(touched) {\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.touched = touched;\n\t\t});\n\t}\n\n\tget value() {\n\t\treturn this.reduce_((result, control, key) => {\n\t\t\tresult[key] = control.value;\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\tset value(value) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tcontrol.value = value[key];\n\t\t});\n\t}\n\n\tget errors() {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn Object.assign(result, control.errors);\n\t\t}, {});\n\t}\n\n\treset() {\n\t\tthis.forEach_(control => control.reset());\n\t}\n\n\tpatch(value) {\n\t\tif (value) {\n\t\t\tthis.forEach_((control, key) => {\n\t\t\t\tif (value[key] != undefined) { // !!! keep != loose inequality\n\t\t\t\t\tcontrol.patch(value[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tinit(control, key) {\n\t\tthis.controls[key] = this.initControl_(control, key);\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tdelete(this.controls[key]);\n\t\tthis.controls[key] = this.initControl_(control, key);\n\t\tthis.switchSubjects_();\n\t}\n\n\t// !!! needed?\n\tadd(control, key) {\n\t\tthis.controls[key] = this.initControl_(control, key);\n\t\tthis.switchSubjects_();\n\t}\n\n\tremove(control) {\n\t\tconst key = Object.keys(this.controls).find(key => this.controls[key] === control ? key : null);\n\t\tif (key) {\n\t\t\tthis.removeKey(key);\n\t\t}\n\t}\n\n\tremoveKey(key) {\n\t\tconst changed = this.controls[key] !== undefined;\n\t\tdelete(this.controls[key]);\n\t\tif (changed) {\n\t\t\tthis.switchSubjects_();\n\t\t}\n\t}\n\n\t/**\n\t * adds one or more FormValidator.\n\t * @param {...FormValidator[]} validators - A list of validators.\n\t */\n\taddValidators(...validators) {\n\t\tthis.forEach_(control => control.addValidators(...validators));\n\t}\n\n\t/**\n\t * replace one or more FormValidator.\n\t * @param {...FormValidator[]} validators - A list of validators.\n\t */\n\treplaceValidators(...validators) {\n\t\tthis.forEach_(control => control.replaceValidators(...validators));\n\t}\n\n\t/**\n\t * remove all FormValidator.\n\t */\n\tclearValidators() {\n\t\tthis.forEach_(control => control.clearValidators());\n\t}\n\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/form-abstract-collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "FormAbstractCollection",
    "memberof": "src/form/form-abstract-collection.js",
    "static": true,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-abstract-collection.js",
    "importStyle": "FormAbstractCollection",
    "description": "Abstract class representing a form collection.",
    "lineNumber": 12,
    "abstract": true,
    "interface": false,
    "extends": [
      "src/form/form-abstract.js~FormAbstract"
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#constructor",
    "access": "public",
    "description": "Create a FormAbstract.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Map<string, any|FormAbstract>"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": "An object containing controls."
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "controls",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#controls",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "initControl_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#initControl_",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "initControls_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#initControls_",
    "access": "private",
    "description": "",
    "lineNumber": 39,
    "ignore": true,
    "params": [
      {
        "name": "controls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "initSubjects_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#initSubjects_",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "changesChildren",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#changesChildren",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "switchSubjects_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#switchSubjects_",
    "access": "private",
    "description": "",
    "lineNumber": 59,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "initObservables_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#initObservables_",
    "access": "private",
    "description": "",
    "lineNumber": 71,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "changes$",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#changes$",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "validate",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#validate",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "status",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#status",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "forEach_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#forEach_",
    "access": "private",
    "description": "",
    "lineNumber": 97,
    "ignore": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "reduce_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#reduce_",
    "access": "private",
    "description": "",
    "lineNumber": 104,
    "ignore": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "result",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "all_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#all_",
    "access": "private",
    "description": "",
    "lineNumber": 114,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "any_",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#any_",
    "access": "private",
    "description": "",
    "lineNumber": 123,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "valid",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#valid",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "get",
    "name": "invalid",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#invalid",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "pending",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#pending",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "get",
    "name": "disabled",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#disabled",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "enabled",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#enabled",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "get",
    "name": "hidden",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#hidden",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "visible",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#visible",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "get",
    "name": "submitted",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#submitted",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "get",
    "name": "dirty",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#dirty",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "get",
    "name": "pristine",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#pristine",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "get",
    "name": "touched",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#touched",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "get",
    "name": "untouched",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#untouched",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "set",
    "name": "disabled",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#disabled",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "set",
    "name": "hidden",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#hidden",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "set",
    "name": "submitted",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#submitted",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "set",
    "name": "touched",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#touched",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "get",
    "name": "value",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#value",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "set",
    "name": "value",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#value",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "get",
    "name": "errors",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#errors",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "reset",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#reset",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "patch",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#patch",
    "access": "public",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "init",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#init",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "get",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#get",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "set",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#set",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "add",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#add",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "remove",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#remove",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "removeKey",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#removeKey",
    "access": "public",
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "addValidators",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#addValidators",
    "access": "public",
    "description": "adds one or more FormValidator.",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "...FormValidator[]"
        ],
        "spread": true,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "replaceValidators",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#replaceValidators",
    "access": "public",
    "description": "replace one or more FormValidator.",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "...FormValidator[]"
        ],
        "spread": true,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "clearValidators",
    "memberof": "src/form/form-abstract-collection.js~FormAbstractCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract-collection.js~FormAbstractCollection#clearValidators",
    "access": "public",
    "description": "remove all FormValidator.",
    "lineNumber": 253,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/form/form-abstract.js",
    "content": "import { BehaviorSubject, combineLatest, isObservable, merge, of } from \"rxjs\";\nimport { auditTime, distinctUntilChanged, map, shareReplay, skip, switchAll, switchMap, tap } from 'rxjs/operators';\nimport FormStatus from './models/form-status';\n\n/**\n * @desc Abstract class representing a form control.\n * @abstract\n * @access public\n */\nexport default class FormAbstract {\n\t/**\n\t * Create a FormAbstract.\n\t * @param {FormValidator|FormValidator[]} validators - A list of validators.\n\t */\n\tconstructor(validators) {\n\t\tthis.validators = validators ? (Array.isArray(validators) ? validators : [validators]) : [];\n\t}\n\n\t/**\n\t * @private initialize subjects\n\t * @return {void}\n\t */\n\tinitSubjects_() {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.valueSubject = new BehaviorSubject(null);\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.statusSubject = new BehaviorSubject(this);\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.validatorsSubject = new BehaviorSubject().pipe(\n\t\t\tswitchAll()\n\t\t);\n\t\tthis.switchValidators_();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tswitchValidators_() {\n\t\tconst validators = this.validators.map(x => x.params$);\n\t\tlet validators$ = validators.length ? combineLatest(validators) : of (validators);\n\t\tthis.validatorsSubject.next(validators$);\n\t}\n\n\t/**\n\t * @private initialize observables\n\t * @return {void}\n\t */\n\tinitObservables_() {\n\t\tthis.value$ = this.valueSubject.pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tskip(1),\n\t\t\ttap(() => {\n\t\t\t\t/**\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tthis.submitted_ = false;\n\t\t\t\t/**\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.status$ = merge(this.statusSubject, this.validatorsSubject).pipe(\n\t\t\t// auditTime(1),\n\t\t\tswitchMap(() => this.validate$(this.value)),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.changes$ = merge(this.value$, this.status$).pipe(\n\t\t\tmap(() => this.value),\n\t\t\tauditTime(1),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\t/**\n\t * @param {null | string} value - the inner control value\n\t * @return {Observable<errors>} an object with key, value errors\n\t */\n\tvalidate$(value) {\n\t\tif (this.status === FormStatus.Disabled || this.status === FormStatus.Hidden || this.submitted_ || !this.validators.length) {\n\t\t\tthis.errors = {};\n\t\t\tif (this.status === FormStatus.Invalid) {\n\t\t\t\tthis.status = FormStatus.Valid;\n\t\t\t}\n\t\t\treturn of(this.errors);\n\t\t} else {\n\t\t\treturn combineLatest(this.validators.map(x => {\n\t\t\t\tlet result$ = x.validate(value);\n\t\t\t\treturn isObservable(result$) ? result$ : of (result$);\n\t\t\t})).pipe(\n\t\t\t\tmap(results => {\n\t\t\t\t\tthis.errors = Object.assign({}, ...results);\n\t\t\t\t\tthis.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @return {boolean} the pending status\n\t */\n\tget pending() { return this.status === FormStatus.Pending; }\n\n\t/**\n\t * @return {boolean} the valid status\n\t */\n\tget valid() { return this.status !== FormStatus.Invalid; }\n\n\t/**\n\t * @return {boolean} the invalid status\n\t */\n\tget invalid() { return this.status === FormStatus.Invalid; }\n\n\t/**\n\t * @return {boolean} the disabled status\n\t */\n\tget disabled() { return this.status === FormStatus.Disabled; }\n\n\t/**\n\t * @return {boolean} the enabled status\n\t */\n\tget enabled() { return this.status !== FormStatus.Disabled; }\n\n\t/**\n\t * @return {boolean} the hidden status\n\t */\n\tget hidden() { return this.status === FormStatus.Hidden; }\n\n\t/**\n\t * @return {boolean} the visible status\n\t */\n\tget visible() { return this.status !== FormStatus.Hidden; }\n\n\t/**\n\t * @return {boolean} the submitted status\n\t */\n\tget submitted() { return this.submitted_; }\n\n\t/**\n\t * @return {boolean} the dirty status\n\t */\n\tget dirty() { return this.dirty_; }\n\n\t/**\n\t * @return {boolean} the pristine status\n\t */\n\tget pristine() { return !this.dirty_; }\n\n\t/**\n\t * @return {boolean} the touched status\n\t */\n\tget touched() { return this.touched_; }\n\n\t/**\n\t * @return {boolean} the untouched status\n\t */\n\tget untouched() { return !this.touched_; }\n\n\t/**\n\t * @param {boolean} disabled - the disabled state\n\t * @return {void}\n\t */\n\tset disabled(disabled) {\n\t\tif (disabled) {\n\t\t\tif (this.status !== FormStatus.Disabled) {\n\t\t\t\tthis.status = FormStatus.Disabled;\n\t\t\t\t// this.value_ = null;\n\t\t\t\tthis.dirty_ = false;\n\t\t\t\tthis.touched_ = false;\n\t\t\t\tthis.submitted_ = false;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t\tthis.status = FormStatus.Pending;\n\t\t\t\t// this.value_ = null;\n\t\t\t\tthis.dirty_ = false;\n\t\t\t\tthis.touched_ = false;\n\t\t\t\tthis.submitted_ = false;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {boolean} hidden - the hidden state\n\t * @return {void}\n\t */\n\tset hidden(hidden) {\n\t\tif (hidden) {\n\t\t\tif (this.status !== FormStatus.Hidden) {\n\t\t\t\tthis.status = FormStatus.Hidden;\n\t\t\t\t// this.value_ = null;\n\t\t\t\tthis.dirty_ = false;\n\t\t\t\tthis.touched_ = false;\n\t\t\t\tthis.submitted_ = false;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.status === FormStatus.Hidden) {\n\t\t\t\tthis.status = FormStatus.Pending;\n\t\t\t\t// this.value_ = null;\n\t\t\t\tthis.dirty_ = false;\n\t\t\t\tthis.touched_ = false;\n\t\t\t\tthis.submitted_ = false;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {boolean} submitted - the submitted state\n\t * @return {void}\n\t */\n\tset submitted(submitted) {\n\t\tthis.submitted_ = submitted;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\t/**\n\t * @param {boolean} touched - the touched state\n\t * @return {void}\n\t */\n\tset touched(touched) {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.touched_ = touched;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\t/**\n\t * @return {null | string} inner value of the control\n\t */\n\tget value() { return this.value_; }\n\n\t/**\n\t * @param {null | string} value - a value\n\t * @return {void}\n\t */\n\tset value(value) {\n\t\t// console.log('set value', value);\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.value_ = value;\n\t\tthis.valueSubject.next(value);\n\t}\n\n\t/**\n\t * @param {null | FormStatus} status - optional FormStatus\n\t * @return {void}\n\t */\n\treset(status) {\n\t\tthis.status = status || FormStatus.Pending;\n\t\tthis.value_ = null;\n\t\tthis.dirty_ = false;\n\t\tthis.touched_ = false;\n\t\tthis.submitted_ = false;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\t/**\n\t * @param {null | string} value - a value\n\t * @return {void}\n\t */\n\tpatch(value) {\n\t\tthis.value_ = value;\n\t\tthis.dirty_ = true;\n\t\tthis.submitted_ = false;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\t/**\n\t * adds one or more FormValidator.\n\t * @param {...FormValidator[]} validators - A list of validators.\n\t */\n\taddValidators(...validators) {\n\t\tthis.validators.push(...validators);\n\t\tthis.switchValidators_();\n\t}\n\n\t/**\n\t * replace one or more FormValidator.\n\t * @param {...FormValidator[]} validators - A list of validators.\n\t */\n\treplaceValidators(...validators) {\n\t\tthis.validators = validators;\n\t\tthis.switchValidators_();\n\t}\n\n\t/**\n\t * remove all FormValidator.\n\t */\n\tclearValidators() {\n\t\tthis.validators = [];\n\t\tthis.switchValidators_();\n\t}\n\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/form-abstract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "class",
    "name": "FormAbstract",
    "memberof": "src/form/form-abstract.js",
    "static": true,
    "longname": "src/form/form-abstract.js~FormAbstract",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-abstract.js",
    "importStyle": "FormAbstract",
    "description": "Abstract class representing a form control.",
    "lineNumber": 10,
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 114,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#constructor",
    "access": "public",
    "description": "Create a FormAbstract.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormValidator",
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "validators",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#validators",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "initSubjects_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#initSubjects_",
    "access": "private",
    "description": "",
    "lineNumber": 23,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "valueSubject",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#valueSubject",
    "access": "private",
    "description": "",
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "statusSubject",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#statusSubject",
    "access": "private",
    "description": "",
    "lineNumber": 31,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "validatorsSubject",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#validatorsSubject",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "switchValidators_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#switchValidators_",
    "access": "private",
    "description": "",
    "lineNumber": 44,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "initObservables_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#initObservables_",
    "access": "private",
    "description": "",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "value$",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#value$",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "submitted_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#submitted_",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "dirty_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#dirty_",
    "access": "private",
    "description": "",
    "lineNumber": 66,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "status$",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#status$",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "changes$",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#changes$",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "validate$",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#validate$",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "null ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the inner control value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable<errors>"
      ],
      "spread": false,
      "description": "an object with key, value errors"
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "errors",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#errors",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "status",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#status",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "pending",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#pending",
    "access": "public",
    "description": "",
    "lineNumber": 110,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the pending status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "get",
    "name": "valid",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#valid",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the valid status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "get",
    "name": "invalid",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#invalid",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the invalid status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "get",
    "name": "disabled",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#disabled",
    "access": "public",
    "description": "",
    "lineNumber": 125,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the disabled status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "get",
    "name": "enabled",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#enabled",
    "access": "public",
    "description": "",
    "lineNumber": 130,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the enabled status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "get",
    "name": "hidden",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#hidden",
    "access": "public",
    "description": "",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the hidden status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "get",
    "name": "visible",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#visible",
    "access": "public",
    "description": "",
    "lineNumber": 140,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the visible status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "get",
    "name": "submitted",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#submitted",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the submitted status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "get",
    "name": "dirty",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#dirty",
    "access": "public",
    "description": "",
    "lineNumber": 150,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the dirty status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "get",
    "name": "pristine",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#pristine",
    "access": "public",
    "description": "",
    "lineNumber": 155,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the pristine status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "get",
    "name": "touched",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#touched",
    "access": "public",
    "description": "",
    "lineNumber": 160,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the touched status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "get",
    "name": "untouched",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#untouched",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the untouched status"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "set",
    "name": "disabled",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#disabled",
    "access": "public",
    "description": "",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "disabled",
        "description": "the disabled state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "touched_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#touched_",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "set",
    "name": "hidden",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#hidden",
    "access": "public",
    "description": "",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hidden",
        "description": "the hidden state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "set",
    "name": "submitted",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#submitted",
    "access": "public",
    "description": "",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "submitted",
        "description": "the submitted state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 164,
    "kind": "set",
    "name": "touched",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#touched",
    "access": "public",
    "description": "",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "the touched state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "get",
    "name": "value",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#value",
    "access": "public",
    "description": "",
    "lineNumber": 243,
    "return": {
      "nullable": null,
      "types": [
        "null ",
        " string"
      ],
      "spread": false,
      "description": "inner value of the control"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "set",
    "name": "value",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#value",
    "access": "public",
    "description": "",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "null ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "a value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "value_",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#value_",
    "access": "private",
    "description": "",
    "lineNumber": 254,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "reset",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#reset",
    "access": "public",
    "description": "",
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "null ",
          " FormStatus"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "optional FormStatus"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "patch",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#patch",
    "access": "public",
    "description": "",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "null ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "a value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "addValidators",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#addValidators",
    "access": "public",
    "description": "adds one or more FormValidator.",
    "lineNumber": 286,
    "params": [
      {
        "nullable": null,
        "types": [
          "...FormValidator[]"
        ],
        "spread": true,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "replaceValidators",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#replaceValidators",
    "access": "public",
    "description": "replace one or more FormValidator.",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "...FormValidator[]"
        ],
        "spread": true,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "clearValidators",
    "memberof": "src/form/form-abstract.js~FormAbstract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-abstract.js~FormAbstract#clearValidators",
    "access": "public",
    "description": "remove all FormValidator.",
    "lineNumber": 303,
    "params": [],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "src/form/form-array.js",
    "content": "import FormAbstract from './form-abstract';\nimport FormAbstractCollection from './form-abstract-collection';\n\n/**\n * @desc Class representing a FormArray.\n */\nexport default class FormArray extends FormAbstractCollection {\n\n\t/**\n\t * @desc Create a FormArray.\n\t * @example\n\t * const form = new FormArray([null, null, null]);\n\t *\n\t * form.changes$.subscribe(changes => {\n\t * \tconsole.log(changes);\n\t * });\n\t * @param {any|FormControl[]} controls - An array containing controls.\n\t * @param {FormValidator[]} validators - A list of validators.\n\t */\n\tconstructor(controls = [], validators) {\n\t\tsuper(controls, validators);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tforEach_(callback) {\n\t\tthis.controls.forEach((control, key) => callback(control, key));\n\t}\n\n\t/**\n\t * @return {any[]}\n\t */\n\tget value() {\n\t\treturn this.reduce_((result, control, key) => {\n\t\t\tresult[key] = control.value;\n\t\t\treturn result;\n\t\t}, []); // init as array\n\t}\n\n\t/**\n\t * @return {number}\n\t */\n\tget length() {\n\t\treturn this.controls.length;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {FormAbstract} control\n\t * @param {number} key\n\t */\n\tinit(control, key) {\n\t\tthis.controls.length = Math.max(this.controls.length, key);\n\t\tthis.controls[key] = this.initControl_(control, key);\n\t}\n\n\t/**\n\t * @param {FormAbstract} control\n\t * @param {number} key\n\t */\n\tset(control, key) {\n\t\t// this.controls.length = Math.max(this.controls.length, key);\n\t\t// this.controls[key] = this.initControl_(control);\n\t\tthis.controls.splice(key, 1, this.initControl_(control, key));\n\t\tthis.switchSubjects_();\n\t}\n\n\t// !!! needed?\n\t/**\n\t * @param {FormAbstract} control\n\t * @param {number} key\n\t */\n\tadd(control, key) {\n\t\tthis.controls.length = Math.max(this.controls.length, key);\n\t\tthis.controls[key] = this.initControl_(control, key);\n\t\tthis.switchSubjects_();\n\t}\n\n\t/**\n\t * @param {FormAbstract} control\n\t */\n\tpush(control) {\n\t\t// this.controls.length = Math.max(this.controls.length, key);\n\t\t// this.controls[key] = this.initControl_(control);\n\t\tthis.controls.push(this.initControl_(control, this.controls.length));\n\t\tthis.switchSubjects_();\n\t}\n\n\t/**\n\t * @param {FormAbstract} control\n\t * @param {number} key\n\t */\n\tinsert(control, key) {\n\t\tthis.controls.splice(key, 0, this.initControl_(control, key));\n\t\tthis.switchSubjects_();\n\t}\n\n\t/**\n\t * @param {FormAbstract} control\n\t */\n\tremove(control) {\n\t\tconst key = this.controls.indexOf(control);\n\t\tif (key !== -1) {\n\t\t\tthis.removeKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} key\n\t */\n\tremoveKey(key) {\n\t\tif (this.controls.length > key) {\n\t\t\tthis.controls.splice(key, 1);\n\t\t\tthis.switchSubjects_();\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} key\n\t */\n\tat(key) {\n\t\treturn this.controls[key];\n\t}\n\n}\n\n/**\n * @desc Shortcut for new FormArray\n * @param {any|FormControl[]} controls\n * @param {FormValidator[]} validators\n */\nexport function formArray(controls, validators) {\n\treturn new FormArray(controls, validators);\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/form-array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "FormArray",
    "memberof": "src/form/form-array.js",
    "static": true,
    "longname": "src/form/form-array.js~FormArray",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-array.js",
    "importStyle": "FormArray",
    "description": "Class representing a FormArray.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/form/form-abstract-collection.js~FormAbstractCollection"
    ]
  },
  {
    "__docId__": 186,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#constructor",
    "access": "public",
    "description": "Create a FormArray.",
    "examples": [
      "const form = new FormArray([null, null, null]);\n\nform.changes$.subscribe(changes => {\n\tconsole.log(changes);\n});"
    ],
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "any",
          "FormControl[]"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": "An array containing controls."
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "forEach_",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#forEach_",
    "access": "private",
    "description": "",
    "lineNumber": 27,
    "ignore": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "get",
    "name": "value",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#value",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "any[]"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "get",
    "name": "length",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#length",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "init",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#init",
    "access": "protected",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "set",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#set",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "add",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#add",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "push",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#push",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "insert",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#insert",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "remove",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#remove",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "FormAbstract"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "removeKey",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#removeKey",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "at",
    "memberof": "src/form/form-array.js~FormArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-array.js~FormArray#at",
    "access": "public",
    "description": "",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "formArray",
    "memberof": "src/form/form-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/form-array.js~formArray",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-array.js",
    "importStyle": "{formArray}",
    "description": "Shortcut for new FormArray",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "any",
          "FormControl[]"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "src/form/form-control.js",
    "content": "import FormAbstract from \"./form-abstract\";\nimport FormStatus from './models/form-status';\n\n/**\n * @desc Class representing a FormControl.\n */\nexport default class FormControl extends FormAbstract {\n\n\t/**\n\t * @desc Create a FormControl.\n\t * @example\n\t * const form = new FormControl(null);\n\t *\n\t * form.changes$.subscribe(changes => {\n\t * \tconsole.log(changes);\n\t * });\n\t * @param {null | string | FormControl} value - The value of the control.\n\t * @param {FormValidator[]} validators - A list of validators.\n\t */\n\tconstructor(value = null, validators) {\n\t\tsuper(validators);\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.value_ = value;\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis.status = FormStatus.Pending;\n\t\tthis.errors = {};\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t\tthis.statusSubject.next(this);\n\t}\n\n}\n\n/** Shortcut for new FormControl. */\nexport function formControl(value, validators) {\n\treturn new FormControl(value, validators);\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/form-control.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "FormControl",
    "memberof": "src/form/form-control.js",
    "static": true,
    "longname": "src/form/form-control.js~FormControl",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-control.js",
    "importStyle": "FormControl",
    "description": "Class representing a FormControl.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/form/form-abstract.js~FormAbstract"
    ]
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/form-control.js~FormControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-control.js~FormControl#constructor",
    "access": "public",
    "description": "Create a FormControl.",
    "examples": [
      "const form = new FormControl(null);\n\nform.changes$.subscribe(changes => {\n\tconsole.log(changes);\n});"
    ],
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "null ",
          " string ",
          " FormControl"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value of the control."
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ]
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "value_",
    "memberof": "src/form/form-control.js~FormControl",
    "static": false,
    "longname": "src/form/form-control.js~FormControl#value_",
    "access": "private",
    "description": "",
    "lineNumber": 25,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "status",
    "memberof": "src/form/form-control.js~FormControl",
    "static": false,
    "longname": "src/form/form-control.js~FormControl#status",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "errors",
    "memberof": "src/form/form-control.js~FormControl",
    "static": false,
    "longname": "src/form/form-control.js~FormControl#errors",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "formControl",
    "memberof": "src/form/form-control.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/form-control.js~formControl",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-control.js",
    "importStyle": "{formControl}",
    "description": "Shortcut for new FormControl.",
    "lineNumber": 39,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "validators",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/form/form-group.js",
    "content": "import FormAbstractCollection from './form-abstract-collection';\n\n/**\n * @desc Class representing a FormGroup.\n */\nexport default class FormGroup extends FormAbstractCollection {\n\n\t/**\n\t * @desc Create a FormControl.\n\t * @example\n\t * const form = new FormGroup({\n\t * \tfirstName: null,\n\t *  lastName: null,\n\t * });\n\t *\n\t * form.changes$.subscribe(changes => {\n\t * \tconsole.log(changes);\n\t * });\n\t * @param {Map<string, any|FormAbstract>} controls - An object containing controls.\n\t * @param {FormValidator[]} validators - A list of validators.\n\t */\n\tconstructor(controls = {}, validators) {\n\t\tsuper(controls, validators);\n\t}\n\n}\n\n/**\n * @desc Shortcut for new FormGroup\n * @param {Map<string, any|FormAbstract>} controls\n * @param {FormValidator[]} validators\n */\nexport function formGroup(controls, validators) {\n\treturn new FormGroup(controls, validators);\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/form-group.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "class",
    "name": "FormGroup",
    "memberof": "src/form/form-group.js",
    "static": true,
    "longname": "src/form/form-group.js~FormGroup",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-group.js",
    "importStyle": "FormGroup",
    "description": "Class representing a FormGroup.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/form/form-abstract-collection.js~FormAbstractCollection"
    ]
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/form-group.js~FormGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/form-group.js~FormGroup#constructor",
    "access": "public",
    "description": "Create a FormControl.",
    "examples": [
      "const form = new FormGroup({\n\tfirstName: null,\n lastName: null,\n});\n\nform.changes$.subscribe(changes => {\n\tconsole.log(changes);\n});"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Map<string, any|FormAbstract>"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": "An object containing controls."
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": "A list of validators."
      }
    ]
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "formGroup",
    "memberof": "src/form/form-group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/form-group.js~formGroup",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/form-group.js",
    "importStyle": "{formGroup}",
    "description": "Shortcut for new FormGroup",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Map<string, any|FormAbstract>"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "FormValidator[]"
        ],
        "spread": false,
        "optional": false,
        "name": "validators",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "src/form/models/form-status.js",
    "content": "const FormStatus = {\n\tPending: 'pending',\n\tValid: 'valid',\n\tInvalid: 'invalid',\n\tDisabled: 'disabled',\n\tHidden: 'hidden',\n};\n\nexport default FormStatus;\n\nexport const FormAttributes = ['untouched', 'touched', 'pristine', 'dirty', 'pending', 'enabled', 'disabled', 'hidden', 'visible', 'valid', 'invalid', 'submitted'];\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/models/form-status.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "FormAttributes",
    "memberof": "src/form/models/form-status.js",
    "static": true,
    "longname": "src/form/models/form-status.js~FormAttributes",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/models/form-status.js",
    "importStyle": "{FormAttributes}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "variable",
    "name": "FormStatus",
    "memberof": "src/form/models/form-status.js",
    "static": true,
    "longname": "src/form/models/form-status.js~FormStatus",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/models/form-status.js",
    "importStyle": "FormStatus",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"Pending\": string, \"Valid\": string, \"Invalid\": string, \"Disabled\": string, \"Hidden\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/form/validators/form-email.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { EmailValidator } from './validators';\n\n/**\n * @desc FormEmailDirective attribute for injecting EmailValidator.\n * @example\n * <input type=\"text\" formControlName=\"email\" email />\n */\nexport default class FormEmailDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormEmailDirective', this.host.control);\n\t\tconst validator = this.validator = EmailValidator();\n\t\tthis.host.control.addValidators(validator);\n\t}\n\n}\n\nFormEmailDirective.meta = {\n\tselector: '[email][formControl],[email][formControlName]',\n\tinputs: ['email'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-email.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "class",
    "name": "FormEmailDirective",
    "memberof": "src/form/validators/form-email.directive.js",
    "static": true,
    "longname": "src/form/validators/form-email.directive.js~FormEmailDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-email.directive.js",
    "importStyle": "FormEmailDirective",
    "description": "FormEmailDirective attribute for injecting EmailValidator.",
    "examples": [
      "<input type=\"text\" formControlName=\"email\" email />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-email.directive.js~FormEmailDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-email.directive.js~FormEmailDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/form/validators/form-max-length.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { MaxLengthValidator } from './validators';\n// import { EmailValidator, MaxLengthValidator, MaxValidator, MaxLengthValidator, MaxValidator, NullValidator, PatternValidator, RequiredTrueValidator, RequiredValidator } from './form/validators/validators';\n\n/**\n * @desc FormMaxLengthDirective attribute for injecting MaxLengthValidator.\n * @example\n * <input type=\"text\" formControlName=\"card\" maxlength=\"12\" />\n */\nexport default class FormMaxLengthDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormMaxLengthDirective.onInit', this.maxlength);\n\t\tconst validator = this.validator = MaxLengthValidator(this.maxlength);\n\t\tthis.host.control.addValidators(this.validator);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormMaxLengthDirective.onChanges', this.maxlength);\n\t\tthis.validator.params = { maxlength: this.maxlength };\n\t}\n\n}\n\nFormMaxLengthDirective.meta = {\n\tselector: '[maxlength][formControl],[maxlength][formControlName]',\n\tinputs: ['maxlength'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-max-length.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "class",
    "name": "FormMaxLengthDirective",
    "memberof": "src/form/validators/form-max-length.directive.js",
    "static": true,
    "longname": "src/form/validators/form-max-length.directive.js~FormMaxLengthDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-max-length.directive.js",
    "importStyle": "FormMaxLengthDirective",
    "description": "FormMaxLengthDirective attribute for injecting MaxLengthValidator.",
    "examples": [
      "<input type=\"text\" formControlName=\"card\" maxlength=\"12\" />"
    ],
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-max-length.directive.js~FormMaxLengthDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-max-length.directive.js~FormMaxLengthDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/validators/form-max-length.directive.js~FormMaxLengthDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-max-length.directive.js~FormMaxLengthDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "src/form/validators/form-max.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { MaxValidator } from './validators';\n\n/**\n * @desc FormMaxDirective attribute for injecting MaxValidator.\n * @example\n * <input type=\"number\" formControlName=\"qty\" max=\"12\" />\n */\nexport default class FormMaxDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormMaxDirective.onInit', this.max);\n\t\tconst validator = this.validator = MaxValidator(this.max);\n\t\tthis.host.control.addValidators(this.validator);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormMaxDirective.onChanges', this.max);\n\t\tthis.validator.params = { max: this.max };\n\t}\n\n}\n\nFormMaxDirective.meta = {\n\tselector: '[max][formControl],[max][formControlName]',\n\tinputs: ['max'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-max.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "class",
    "name": "FormMaxDirective",
    "memberof": "src/form/validators/form-max.directive.js",
    "static": true,
    "longname": "src/form/validators/form-max.directive.js~FormMaxDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-max.directive.js",
    "importStyle": "FormMaxDirective",
    "description": "FormMaxDirective attribute for injecting MaxValidator.",
    "examples": [
      "<input type=\"number\" formControlName=\"qty\" max=\"12\" />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-max.directive.js~FormMaxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-max.directive.js~FormMaxDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/validators/form-max.directive.js~FormMaxDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-max.directive.js~FormMaxDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/form/validators/form-min-length.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { MinLengthValidator } from './validators';\n\n/**\n * @desc FormMinLengthDirective attribute for injecting MinLengthValidator.\n * @example\n * <input type=\"text\" formControlName=\"card\" minlength=\"12\" />\n */\nexport default class FormMinLengthDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormMinLengthDirective.onInit', this.minlength);\n\t\tconst validator = this.validator = MinLengthValidator(this.minlength);\n\t\tthis.host.control.addValidators(this.validator);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormMinLengthDirective.onChanges', this.minlength);\n\t\tthis.validator.params = { minlength: this.minlength };\n\t}\n\n}\n\nFormMinLengthDirective.meta = {\n\tselector: '[minlength][formControl],[minlength][formControlName]',\n\tinputs: ['minlength'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-min-length.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "class",
    "name": "FormMinLengthDirective",
    "memberof": "src/form/validators/form-min-length.directive.js",
    "static": true,
    "longname": "src/form/validators/form-min-length.directive.js~FormMinLengthDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-min-length.directive.js",
    "importStyle": "FormMinLengthDirective",
    "description": "FormMinLengthDirective attribute for injecting MinLengthValidator.",
    "examples": [
      "<input type=\"text\" formControlName=\"card\" minlength=\"12\" />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-min-length.directive.js~FormMinLengthDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-min-length.directive.js~FormMinLengthDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/validators/form-min-length.directive.js~FormMinLengthDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-min-length.directive.js~FormMinLengthDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/form/validators/form-min.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { MinValidator } from './validators';\n\n/**\n * @desc FormMinDirective attribute for injecting MinValidator.\n * @example\n * <input type=\"number\" formControlName=\"qty\" min=\"1\" />\n */\nexport default class FormMinDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormMinDirective.onInit', this.min);\n\t\tconst validator = this.validator = MinValidator(this.min);\n\t\tthis.host.control.addValidators(this.validator);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormMinDirective.onChanges', this.min);\n\t\tthis.validator.params = { min: this.min };\n\t}\n\n}\n\nFormMinDirective.meta = {\n\tselector: '[min][formControl],[min][formControlName]',\n\tinputs: ['min'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-min.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "FormMinDirective",
    "memberof": "src/form/validators/form-min.directive.js",
    "static": true,
    "longname": "src/form/validators/form-min.directive.js~FormMinDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-min.directive.js",
    "importStyle": "FormMinDirective",
    "description": "FormMinDirective attribute for injecting MinValidator.",
    "examples": [
      "<input type=\"number\" formControlName=\"qty\" min=\"1\" />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-min.directive.js~FormMinDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-min.directive.js~FormMinDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/validators/form-min.directive.js~FormMinDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-min.directive.js~FormMinDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "src/form/validators/form-pattern.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { PatternValidator } from './validators';\n\n/**\n * @desc FormPatternDirective attribute for injecting PatternValidator.\n * @example\n * <input type=\"text\" formControlName=\"visa\" pattern=\"^4[0-9]{12}(?:[0-9]{3})?$\" />\n */\nexport default class FormPatternDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormPatternDirective.onInit', this.pattern);\n\t\tconst validator = this.validator = PatternValidator(this.pattern);\n\t\tthis.host.control.addValidators(this.validator);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormPatternDirective.onChanges', this.pattern);\n\t\tthis.validator.params = { pattern: this.pattern };\n\t}\n\n}\n\nFormPatternDirective.meta = {\n\tselector: '[pattern][formControl],[pattern][formControlName]',\n\tinputs: ['pattern'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-pattern.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "class",
    "name": "FormPatternDirective",
    "memberof": "src/form/validators/form-pattern.directive.js",
    "static": true,
    "longname": "src/form/validators/form-pattern.directive.js~FormPatternDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-pattern.directive.js",
    "importStyle": "FormPatternDirective",
    "description": "FormPatternDirective attribute for injecting PatternValidator.",
    "examples": [
      "<input type=\"text\" formControlName=\"visa\" pattern=\"^4[0-9]{12}(?:[0-9]{3})?$\" />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-pattern.directive.js~FormPatternDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-pattern.directive.js~FormPatternDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "onChanges",
    "memberof": "src/form/validators/form-pattern.directive.js~FormPatternDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-pattern.directive.js~FormPatternDirective#onChanges",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "changes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "src/form/validators/form-required-true.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { RequiredTrueValidator } from './validators';\n\n/**\n * @desc FormRequiredTrueDirective attribute for injecting RequiredTrueValidator.\n * @example\n * <input type=\"checkbox\" formControlName=\"privacy\" requiredTrue />\n */\nexport default class FormRequiredTrueDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormRequiredTrueDirective', this.host.control);\n\t\tconst validator = this.validator = RequiredTrueValidator();\n\t\tthis.host.control.addValidators(validator);\n\t}\n\n}\n\nFormRequiredTrueDirective.meta = {\n\tselector: '[requiredTrue][formControl],[requiredTrue][formControlName]',\n\tinputs: ['requiredTrue'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-required-true.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "FormRequiredTrueDirective",
    "memberof": "src/form/validators/form-required-true.directive.js",
    "static": true,
    "longname": "src/form/validators/form-required-true.directive.js~FormRequiredTrueDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-required-true.directive.js",
    "importStyle": "FormRequiredTrueDirective",
    "description": "FormRequiredTrueDirective attribute for injecting RequiredTrueValidator.",
    "examples": [
      "<input type=\"checkbox\" formControlName=\"privacy\" requiredTrue />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-required-true.directive.js~FormRequiredTrueDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-required-true.directive.js~FormRequiredTrueDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "src/form/validators/form-required.directive.js",
    "content": "import { Directive } from 'rxcomp';\nimport FormAbstractDirective from '../directives/form-abstract.directive';\nimport { RequiredValidator } from './validators';\n\n/**\n * @desc FormRequiredDirective attribute for injecting RequiredValidator.\n * @example\n * <input type=\"text\" formControlName=\"firstName\" required />\n */\nexport default class FormRequiredDirective extends Directive {\n\n\tonInit() {\n\t\t// console.log('FormRequiredDirective', this.host.control);\n\t\tconst validator = this.validator = RequiredValidator();\n\t\tthis.host.control.addValidators(validator);\n\t}\n\n}\n\nFormRequiredDirective.meta = {\n\tselector: '[required][formControl],[required][formControlName]',\n\tinputs: ['required'],\n\thosts: { host: FormAbstractDirective },\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-required.directive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "class",
    "name": "FormRequiredDirective",
    "memberof": "src/form/validators/form-required.directive.js",
    "static": true,
    "longname": "src/form/validators/form-required.directive.js~FormRequiredDirective",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-required.directive.js",
    "importStyle": "FormRequiredDirective",
    "description": "FormRequiredDirective attribute for injecting RequiredValidator.",
    "examples": [
      "<input type=\"text\" formControlName=\"firstName\" required />"
    ],
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "rxcomp~Directive"
    ]
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/form/validators/form-required.directive.js~FormRequiredDirective",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-required.directive.js~FormRequiredDirective#onInit",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/form/validators/form-validator.js",
    "content": "import { BehaviorSubject } from \"rxjs\";\n\n/**\n * @desc FormValidator class representing a form validator.\n * @example\n * export function EqualValidator(equal) {\n * \treturn new FormValidator(function(value) {\n * \t\tconst equal = this.params.equal;\n * \t\tif (!value || !equal) {\n * \t\t\treturn null;\n * \t\t}\n * \t\treturn value !== equal ? { equal: { equal: equal, actual: value } } : null;\n * \t}, { equal });\n * }\n */\nexport default class FormValidator {\n\n\t/**\n\t * params getter\n\t * @return {any} params\n\t */\n\tget params() {\n\t\treturn this.params$.getValue();\n\t}\n\n\t/**\n\t * params setter\n\t * @param {any} params\n\t */\n\tset params(params) {\n\t\tif (params) {\n\t\t\tconst current = this.params;\n\t\t\tconst differs = Object.keys(params).reduce((flag, key) => {\n\t\t\t\treturn flag || !current || current[key] !== params[key];\n\t\t\t}, false);\n\t\t\tif (differs) {\n\t\t\t\t// if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n\t\t\t\tthis.params$.next(params);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create a FormValidator.\n\t * @abstract\n\t */\n\tconstructor(validator, params) {\n\t\tthis.validator = validator.bind(this);\n\t\tthis.params$ = new BehaviorSubject(params);\n\t}\n\n\t/**\n\t * validate a value\n\t * @param {any} value - the value to validate\n\t * @return {null|FormValidationError}\n\t */\n\tvalidate(value) {\n\t\treturn this.validator(value);\n\t}\n\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/form-validator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "class",
    "name": "FormValidator",
    "memberof": "src/form/validators/form-validator.js",
    "static": true,
    "longname": "src/form/validators/form-validator.js~FormValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/form-validator.js",
    "importStyle": "FormValidator",
    "description": "FormValidator class representing a form validator.",
    "examples": [
      "export function EqualValidator(equal) {\n\treturn new FormValidator(function(value) {\n\t\tconst equal = this.params.equal;\n\t\tif (!value || !equal) {\n\t\t\treturn null;\n\t\t}\n\t\treturn value !== equal ? { equal: { equal: equal, actual: value } } : null;\n\t}, { equal });\n}"
    ],
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 244,
    "kind": "get",
    "name": "params",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#params",
    "access": "public",
    "description": "params getter",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "params"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "set",
    "name": "params",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#params",
    "access": "public",
    "description": "params setter",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#constructor",
    "access": "public",
    "description": "Create a FormValidator.",
    "lineNumber": 47,
    "abstract": true
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "validator",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#validator",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "params$",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#params$",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "validate",
    "memberof": "src/form/validators/form-validator.js~FormValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/form/validators/form-validator.js~FormValidator#validate",
    "access": "public",
    "description": "validate a value",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to validate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/form/validators/validators.js",
    "content": "import FormValidator from './form-validator';\n\n/**\n * a null validator\n * @return {null}\n */\nexport function NullValidator() {\n\treturn new FormValidator(function(value) {\n\t\treturn null;\n\t});\n}\n\n/**\n * a required validator\n * @return {null|FormValidationError}\n */\nexport function RequiredValidator() {\n\treturn new FormValidator(function(value) {\n\t\t// console.log('RequiredValidator', value, (value == null || value.length === 0) ? { required: true } : null);\n\t\treturn (value == null || value.length === 0) ? { required: true } : null;\n\t});\n\t// return (value == null || value.length === 0) ? 'required' : null;\n}\n\n/**\n * a required and true validator\n * @return {null|FormValidationError}\n */\nexport function RequiredTrueValidator() {\n\treturn new FormValidator(function(value) {\n\t\t// console.log('RequiredTrueValidator', value, value === true ? null : { required: true });\n\t\treturn value === true ? null : { required: true };\n\t});\n}\n\n/**\n * a min number value validator\n * @return {null|FormValidationError}\n */\nexport function MinValidator(min) {\n\treturn new FormValidator(function(value) {\n\t\tconst min = this.params.min;\n\t\tif (!value || !min) {\n\t\t\treturn null;\n\t\t}\n\t\tvalue = parseFloat(value);\n\t\treturn !isNaN(value) && value < min ? { min: { min: min, actual: value } } : null;\n\t}, { min });\n}\n\n/**\n * a max number value validator\n * @return {null|FormValidationError}\n */\nexport function MaxValidator(max) {\n\treturn new FormValidator(function(value) {\n\t\tconst max = this.params.max;\n\t\tif (!value || !max) {\n\t\t\treturn null;\n\t\t}\n\t\tvalue = parseFloat(value);\n\t\treturn !isNaN(value) && value > max ? { max: { max: max, actual: value } } : null;\n\t}, { max });\n}\n\n/**\n * a min string length validator\n * @return {null|FormValidationError}\n */\nexport function MinLengthValidator(minlength) {\n\treturn new FormValidator(function(value) {\n\t\tconst minlength = this.params.minlength;\n\t\tif (!value || !minlength) {\n\t\t\treturn null;\n\t\t}\n\t\tconst length = value ? value.length : 0;\n\t\treturn length < minlength ? { minlength: { requiredLength: minlength, actualLength: length } } : null;\n\t}, { minlength });\n}\n\n/**\n * a max string length validator\n * @return {null|FormValidationError}\n */\nexport function MaxLengthValidator(maxlength) {\n\treturn new FormValidator(function(value) {\n\t\tconst maxlength = this.params.maxlength;\n\t\tif (!value || !maxlength) {\n\t\t\treturn null;\n\t\t}\n\t\tconst length = value ? value.length : 0;\n\t\treturn length > maxlength ? { minlength: { requiredLength: maxlength, actualLength: length } } : null;\n\t}, { maxlength });\n}\n\n/**\n * a regex pattern validator\n * @return {null|FormValidationError}\n */\nexport function PatternValidator(pattern) {\n\treturn new FormValidator(function(value) {\n\t\tconst pattern = this.params.pattern;\n\t\tif (!value || !pattern) {\n\t\t\treturn null;\n\t\t}\n\t\tconst regex = patternToRegEx(pattern);\n\t\treturn regex.test(value) ? null : { pattern: { requiredPattern: regex.toString(), actualValue: value } };\n\t}, { pattern });\n}\n\n/**\n * an email pattern validator\n * @return {null|FormValidationError}\n */\nexport function EmailValidator(value) {\n\tconst regex = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\treturn new FormValidator(function(value) {\n\t\tif (!value) {\n\t\t\treturn null;\n\t\t}\n\t\treturn regex.test(value) ? null : { email: true };\n\t});\n}\n\nfunction patternToRegEx(pattern) {\n\tlet regex;\n\tif (pattern instanceof RegExp) {\n\t\tregex = pattern;\n\t} else if (typeof pattern === 'string') {\n\t\tpattern = pattern.charAt(0) === '^' ? pattern : `^${pattern}`;\n\t\tpattern = pattern.charAt(pattern.length - 1) === '$' ? pattern : `${pattern}$`;\n\t\tregex = new RegExp(pattern);\n\t}\n\treturn regex;\n}\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form/validators/validators.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "NullValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~NullValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{NullValidator}",
    "description": "a null validator",
    "lineNumber": 7,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "RequiredValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~RequiredValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{RequiredValidator}",
    "description": "a required validator",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "RequiredTrueValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~RequiredTrueValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{RequiredTrueValidator}",
    "description": "a required and true validator",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "MinValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~MinValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{MinValidator}",
    "description": "a min number value validator",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "min",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "MaxValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~MaxValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{MaxValidator}",
    "description": "a max number value validator",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "MinLengthValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~MinLengthValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{MinLengthValidator}",
    "description": "a min string length validator",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "minlength",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "MaxLengthValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~MaxLengthValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{MaxLengthValidator}",
    "description": "a max string length validator",
    "lineNumber": 85,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "maxlength",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "PatternValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~PatternValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{PatternValidator}",
    "description": "a regex pattern validator",
    "lineNumber": 100,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "pattern",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "EmailValidator",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~EmailValidator",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": "{EmailValidator}",
    "description": "an email pattern validator",
    "lineNumber": 115,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "FormValidationError"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "patternToRegEx",
    "memberof": "src/form/validators/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/form/validators/validators.js~patternToRegEx",
    "access": "public",
    "export": false,
    "importPath": "rxcomp-form/src/form/validators/validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [
      {
        "name": "pattern",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "src/form.module.js",
    "content": "import { Module } from 'rxcomp';\nimport FormArrayDirective from './form/directives/form-array.directive';\nimport FormCheckboxDirective from './form/directives/form-checkbox.directive';\nimport FormFieldComponent from './form/directives/form-field.component';\nimport FormGroupDirective from './form/directives/form-group.directive';\nimport FormInputDirective from './form/directives/form-input.directive';\nimport FormPlaceholderDirective from './form/directives/form-placeholder.directive';\nimport FormRadioDirective from './form/directives/form-radio.directive';\nimport FormSelectDirective from './form/directives/form-select.directive';\nimport FormSubmitDirective from './form/directives/form-submit.directive';\nimport FormEmailDirective from './form/validators/form-email.directive';\nimport FormMaxLengthDirective from './form/validators/form-max-length.directive';\nimport FormMaxDirective from './form/validators/form-max.directive';\nimport FormMinLengthDirective from './form/validators/form-min-length.directive';\nimport FormMinDirective from './form/validators/form-min.directive';\nimport FormPatternDirective from './form/validators/form-pattern.directive';\nimport FormRequiredTrueDirective from './form/validators/form-required-true.directive';\nimport FormRequiredDirective from './form/validators/form-required.directive';\n\n/**\n * @desc FormModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *   FormModule\n *  ],\n *  declarations: [\n *   ErrorsComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class FormModule extends Module {}\nconst factories = [\n\tFormArrayDirective,\n\tFormCheckboxDirective,\n\tFormFieldComponent,\n\tFormGroupDirective,\n\tFormInputDirective,\n\tFormPlaceholderDirective,\n\tFormRadioDirective,\n\tFormSelectDirective,\n\tFormSubmitDirective,\n\tFormEmailDirective,\n\tFormMaxDirective,\n\tFormMaxLengthDirective,\n\tFormMinDirective,\n\tFormMinLengthDirective,\n\tFormPatternDirective,\n\tFormRequiredDirective,\n\tFormRequiredTrueDirective,\n];\nconst pipes = [\n];\nFormModule.meta = {\n\tdeclarations: [\n\t\t...factories,\n\t\t...pipes,\n\t],\n\texports: [\n\t\t...factories,\n\t\t...pipes,\n\t]\n};\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/form.module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "class",
    "name": "FormModule",
    "memberof": "src/form.module.js",
    "static": true,
    "longname": "src/form.module.js~FormModule",
    "access": "public",
    "export": true,
    "importPath": "rxcomp-form/src/form.module.js",
    "importStyle": "FormModule",
    "description": "FormModule Class.",
    "examples": [
      "export default class AppModule extends Module {}\n\nAppModule.meta = {\n imports: [\n  CoreModule,\n  FormModule\n ],\n declarations: [\n  ErrorsComponent\n ],\n bootstrap: AppComponent,\n};"
    ],
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "factories",
    "memberof": "src/form.module.js",
    "static": true,
    "longname": "src/form.module.js~factories",
    "access": "public",
    "export": false,
    "importPath": "rxcomp-form/src/form.module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "name": "pipes",
    "memberof": "src/form.module.js",
    "static": true,
    "longname": "src/form.module.js~pipes",
    "access": "public",
    "export": false,
    "importPath": "rxcomp-form/src/form.module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "file",
    "name": "src/rxcomp-form.js",
    "content": "export { default as FormModule } from './form.module';\nexport { default as FormAbstractCollectionDirective } from './form/directives/form-abstract-collection.directive';\nexport { default as FormArrayDirective } from './form/directives/form-array.directive';\nexport { default as FormCheckboxDirective } from './form/directives/form-checkbox.directive';\nexport { default as FormFieldComponent } from './form/directives/form-field.component';\nexport { default as FormGroupDirective } from './form/directives/form-group.directive';\nexport { default as FormInputDirective } from './form/directives/form-input.directive';\nexport { default as FormPlaceholderDirective } from './form/directives/form-placeholder.directive';\nexport { default as FormRadioDirective } from './form/directives/form-radio.directive';\nexport { default as FormSelectDirective } from './form/directives/form-select.directive';\nexport { default as FormAbstract } from './form/form-abstract';\nexport { default as FormAbstractCollection } from './form/form-abstract-collection';\nexport { default as FormArray, formArray } from './form/form-array';\nexport { default as FormControl } from './form/form-control';\nexport { default as FormGroup, formGroup } from './form/form-group';\nexport { default as FormStatus, FormAttributes } from './form/models/form-status';\nexport { default as FormEmailDirective } from './form/validators/form-email.directive';\nexport { default as FormMaxLengthDirective } from './form/validators/form-max-length.directive';\nexport { default as FormMaxDirective } from './form/validators/form-max.directive';\nexport { default as FormMinLengthDirective } from './form/validators/form-min-length.directive';\nexport { default as FormMinDirective } from './form/validators/form-min.directive';\nexport { default as FormPatternDirective } from './form/validators/form-pattern.directive';\nexport { default as FormRequiredTrueDirective } from './form/validators/form-required-true.directive';\nexport { default as FormRequiredDirective } from './form/validators/form-required.directive';\nexport { default as FormValidator } from './form/validators/form-validator';\nexport { EmailValidator, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NullValidator, PatternValidator, RequiredTrueValidator, RequiredValidator } from './form/validators/validators';\nexport { Validators };\nimport * as Validators from './form/validators/validators';\n",
    "static": true,
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/src/rxcomp-form.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# 💎 RxComp FormModule\n\n[![Licence](https://img.shields.io/github/license/actarian/rxcomp-form.svg)](https://github.com/actarian/rxcomp-form)\n\n[RxComp FormModule](https://github.com/actarian/rxcomp-form) is a Reactive Form Module for RxComp library\n\n[RxComp](https://github.com/actarian/rxcomp) is a reactive component library built on top of [RxJs](https://github.com/ReactiveX/rxjs) that mimics the [Angular](https://angular.io/) declarative syntax. \n\nIf you like Angular declarative syntax but you just want go Vanilla, RxComp library come in useful.\n\n lib & dependancy    | size\n:--------------------|:----------------------------------------------------------------------------------------------|\nrxcomp-form.min.js   | ![](https://img.badgesize.io/actarian/rxcomp-form/master/dist/rxcomp-form.min.js.svg?compression=gzip)\nrxcomp-form.min.js   | ![](https://img.badgesize.io/actarian/rxcomp-form/master/dist/rxcomp-form.min.js.svg)\nrxcomp.min.js        | ![](https://img.badgesize.io/actarian/rxcomp/master/dist/rxcomp.min.js.svg?compression=gzip)\nrxcomp.min.js        | ![](https://img.badgesize.io/actarian/rxcomp/master/dist/rxcomp.min.js.svg)\nrxjs.min.js          | ![](https://img.badgesize.io/https://unpkg.com/@reactivex/rxjs@6.5.4/dist/global/rxjs.umd.min.js.svg?compression=gzip)\nrxjs.min.js          | ![](https://img.badgesize.io/https://unpkg.com/@reactivex/rxjs@6.5.4/dist/global/rxjs.umd.min.js.svg)\n \n> [RxComp Form Demo](https://actarian.github.io/rxcomp-form/)  \n> [RxComp Form Api](https://actarian.github.io/rxcomp-form/api/)  \n> [RxComp Form Codepen](https://codepen.io/actarian/pen/vYEXXPe?editors=0010)  \n___\n\n### What is included\n* Models  \n*```FormControl```, ```FormGroup```, ```FormArray```*  \n\n* Directives  \n*```FormInput```, ```FormTextarea```, ```FormSelect```, ```FormCheckbox```, ```FormRadio```, ```FormSubmit```*  \n\n* Validators  \n*```EmailValidator```, ```MaxLengthValidator```, ```MaxValidator```, ```MinLengthValidator```, ```MinValidator```, ```NullValidator```, ```PatternValidator```, ```RequiredTrueValidator```, ```RequiredValidator```* \n\n___\n\n## Installation and Usage\n\n### ES6 via npm\nThis library depend on [RxComp](https://github.com/actarian/rxcomp) and [RxJs](https://github.com/ReactiveX/rxjs)  \ninstall via npm or include via script   \n\n```\nnpm install rxjs rxcomp rxcomp-form --save\n```\n___\n\n### CDN\n\nFor CDN, you can use unpkg\n\n```html\n<script src=\"https://unpkg.com/@reactivex/rxjs@6.5.4/dist/global/rxjs.umd.min.js\"></script>\n<script src=\"https://unpkg.com/rxcomp@1.0.0-beta.5/dist/rxcomp.min.js\"></script>  \n<script src=\"https://unpkg.com/rxcomp-form@1.0.0-beta.5/dist/rxcomp-form.min.js\"></script>\n```\n\nThe global namespace for RxComp is `rxcomp`\n\n```javascript\nimport { CoreModule, Module } from 'rxcomp';\n```\n\nThe global namespace for RxComp FormModule is `rxcomp-form`\n\n```javascript\nimport { FormModule } from 'rxcomp-form';\n```\n___\n\n### Bootstrapping Module\n\n```javascript\nimport { Browser, CoreModule, Module } from 'rxcomp';\nimport { FormModule } from 'rxcomp-form';\nimport AppComponent from './app.component';\n\nexport default class AppModule extends Module {}\n\nAppModule.meta = {\n    imports: [\n        CoreModule,\n        FormModule\n    ],\n    declarations: [],\n    bootstrap: AppComponent,\n};\n\nBrowser.bootstrap(AppModule);\n```\n___\n\n### Reactive Form Definition\n\n```javascript\nimport { Component } from 'rxcomp';\nimport { FormArray, FormGroup, RequiredValidator } from 'rxcomp-form';\n\nexport default class AppComponent extends Component {\n\n    onInit() {\n        const form = new FormGroup({\n            firstName: null,\n            lastName: null,\n            email: null,\n            country: null,\n            evaluate: null,\n            privacy: null,\n            items: new FormArray([null, null, null], RequiredValidator()),\n        });\n\n        /*\n        form.patch({\n            firstName: 'Jhon',\n            lastName: 'Appleseed',\n            email: 'jhonappleseed@gmail.com',\n            country: 'en-US'\n        });\n        */\n\n        form.changes$.subscribe((changes) => {\n            this.pushChanges();\n        });\n\n        this.form = form;\n    }\n\n    onSubmit() {\n        if (this.form.valid) {\n            this.form.submitted = true;\n            // this.form.reset();\n        }\n    }\n\n}\n\nAppComponent.meta = {\n    selector: '[app-component]',\n};\n```\n___\n\n### Declarative Syntax\n\n```html\n<form [formGroup]=\"form\" (submit)=\"onSubmit()\" name=\"form\" role=\"form\" novalidate autocomplete=\"off\">\n    <input type=\"text\" formControlName=\"firstName\" placeholder=\"firstName\" />\n    <input type=\"text\" formControlName=\"lastName\" placeholder=\"lastName\" />\n    <button type=\"submit\" [class]=\"{ submitted: form.submitted }\">Submit</button>\n</form>\n```\n___\n### Browser Compatibility\nRxComp supports all browsers that are [ES5-compliant](http://kangax.github.io/compat-table/es5/) (IE8 and below are not supported).\n___\n## Contributing\n\n*Pull requests are welcome and please submit bugs 🐞*\n___\n\n### Install packages\n```\nnpm install\n```\n___\n\n### Build, Serve & Watch \n```\ngulp\n```\n___\n\n### Build Dist\n```\ngulp build --target dist\n```\n___\n\n*Thank you for taking the time to provide feedback and review. This feedback is appreciated and very helpful 🌈*\n\n[![GitHub forks](https://img.shields.io/github/forks/actarian/rxcomp.svg?style=social&label=Fork&maxAge=2592000)](https://gitHub.com/actarian/rxcomp/network/)  [![GitHub stars](https://img.shields.io/github/stars/actarian/rxcomp.svg?style=social&label=Star&maxAge=2592000)](https://GitHub.com/actarian/rxcomp/stargazers/)  [![GitHub followers](https://img.shields.io/github/followers/actarian.svg?style=social&label=Follow&maxAge=2592000)](https://github.com/actarian?tab=followers)\n\n* [Github Project Page](https://github.com/actarian/rxcomp)  \n\n*If you find it helpful, feel free to contribute in keeping this library up to date via [PayPal](https://www.paypal.me/circledev/5)*\n\n[![PayPal](https://www.paypalobjects.com/webstatic/en_US/i/buttons/PP_logo_h_100x26.png)](https://www.paypal.me/circledev/5)\n___\n\n## Contact\n\n* Luca Zampetti <lzampetti@gmail.com>\n* Follow [@actarian](https://twitter.com/actarian) on Twitter\n\n[![Twitter Follow](https://img.shields.io/twitter/follow/actarian.svg?style=social&label=Follow%20@actarian)](https://twitter.com/actarian)\n___\n\n## Release Notes\nChangelog [here](https://github.com/actarian/rxcomp-form/blob/master/CHANGELOG.md).\n",
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n\t\"author\": \"Luca Zampetti <lzampetti@gmail.com>\",\n\t\"name\": \"rxcomp-form\",\n\t\"description\": \"Reactive FormModule for RxComp component library\",\n\t\"version\": \"1.0.0-beta.3\",\n\t\"main\": \"dist/rxcomp-form.js\",\n\t\"license\": \"MIT\",\n\t\"keywords\": [\n\t\t\"rxcomp\",\n\t\t\"framework\",\n\t\t\"form\",\n\t\t\"rxjs\",\n\t\t\"es6\",\n\t\t\"es2015\"\n\t],\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/actarian/rxcomp-form.git\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/actarian/rxcomp-form/issues\"\n\t},\n\t\"homepage\": \"https://github.com/actarian/rxcomp-form\",\n\t\"scripts\": {\n\t\t\"start\": \"gulp\",\n\t\t\"build\": \"gulp build --target dist\"\n\t},\n\t\"browserslist\": {\n\t\t\"development\": [\n\t\t\t\"last 1 version\"\n\t\t],\n\t\t\"production\": [\n\t\t\t\"last 2 version\",\n\t\t\t\"ie 11\"\n\t\t]\n\t},\n\t\"dependencies\": {\n\t\t\"rxjs\": \"~6.5.4\",\n\t\t\"rxcomp\": \"~1.0.0-beta.5\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@babel/core\": \"~7.6.4\",\n\t\t\"@babel/plugin-proposal-class-properties\": \"~7.5.5\",\n\t\t\"@babel/plugin-proposal-object-rest-spread\": \"~7.6.2\",\n\t\t\"@babel/plugin-transform-flow-strip-types\": \"~7.6.3\",\n\t\t\"@babel/plugin-transform-modules-systemjs\": \"~7.5.0\",\n\t\t\"@babel/preset-env\": \"~7.6.3\",\n\t\t\"@babel/preset-typescript\": \"~7.6.0\",\n\t\t\"babel-plugin-syntax-dynamic-import\": \"~6.18.0\",\n\t\t\"babelify\": \"~10.0.0\",\n\t\t\"browserify\": \"~16.5.0\",\n\t\t\"esdoc\": \"~1.1.0\",\n\t\t\"esdoc-accessor-plugin\": \"~1.0.0\",\n\t\t\"esdoc-brand-plugin\": \"~1.0.1\",\n\t\t\"esdoc-coverage-plugin\": \"~1.1.0\",\n\t\t\"esdoc-external-ecmascript-plugin\": \"~1.0.0\",\n\t\t\"esdoc-inject-assets-plugin\": \"~1.0.0\",\n\t\t\"esdoc-integrate-manual-plugin\": \"~1.0.0\",\n\t\t\"esdoc-lint-plugin\": \"~1.0.2\",\n\t\t\"esdoc-publish-html-plugin\": \"~1.1.2\",\n\t\t\"esdoc-standard-plugin\": \"~1.0.0\",\n\t\t\"esdoc-type-inference-plugin\": \"~1.0.2\",\n\t\t\"esdoc-undocumented-identifier-plugin\": \"~1.0.0\",\n\t\t\"esdoc-unexported-identifier-plugin\": \"~1.0.0\",\n\t\t\"eslint\": \"~6.5.1\",\n\t\t\"gulp\": \"~4.0.2\",\n\t\t\"gulp-autoprefixer\": \"~7.0.1\",\n\t\t\"gulp-babel\": \"~8.0.0-beta.2\",\n\t\t\"gulp-better-rollup\": \"~4.0.1\",\n\t\t\"gulp-concat\": \"~2.6.1\",\n\t\t\"gulp-concat-util\": \"~0.5.5\",\n\t\t\"gulp-cssmin\": \"~0.2.0\",\n\t\t\"gulp-filter\": \"~6.0.0\",\n\t\t\"gulp-html2js\": \"~0.4.2\",\n\t\t\"gulp-if\": \"~3.0.0\",\n\t\t\"gulp-plumber\": \"~1.2.1\",\n\t\t\"gulp-rename\": \"~1.4.0\",\n\t\t\"gulp-sass\": \"~4.0.2\",\n\t\t\"gulp-terser\": \"~1.2.0\",\n\t\t\"gulp-webserver\": \"~0.9.1\",\n\t\t\"rollup\": \"~1.26.3\",\n\t\t\"rollup-plugin-babel\": \"~4.3.3\",\n\t\t\"rollup-plugin-banner\": \"~0.2.1\",\n\t\t\"rollup-plugin-license\": \"~0.12.1\",\n\t\t\"tfs\": \"~1.6.0\",\n\t\t\"through2\": \"~3.0.1\",\n\t\t\"tsify\": \"~4.0.1\",\n\t\t\"tslint\": \"~5.20.0\",\n\t\t\"typescript\": \"~3.6.4\",\n\t\t\"yargs\": \"~14.2.0\"\n\t}\n}\n",
    "longname": "/Users/lucazampetti/Desktop/GIT/rxcomp-form/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]