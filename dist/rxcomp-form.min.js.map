{ "version": 3, "sources": ["dist/rxcomp-form.js", "../src/form/form-status.js", "../src/form/control-group.directive.js", "../src/form/form-accessor.js", "../src/form/form-group-accessor.js", "../src/form/submit.directive.js", "../src/form.module.js", "../src/form/form-abstract.js", "../src/form/form-control.js", "../src/form/form-abstract-collection.js", "../src/form/form-array.js", "../src/form/form-group.js", "../src/form/form-validators.js"], "names": ["global", "factory", "exports", "module", "require", "define", "amd", "self", "rxcomp", "rxjs", "operators", "this", "_defineProperties", "target", "props", "i", "length", "descriptor", "enumerable", "configurable", "writable", "Object", "defineProperty", "key", "_createClass", "Constructor", "protoProps", "staticProps", "prototype", "_inheritsLoose", "subClass", "superClass", "create", "constructor", "__proto__", "FormStatus", "Valid", "Invalid", "Pending", "Disabled", "FormAttributes", "formFieldDirective", "_Component", "apply", "arguments", "_proto", "getFormRef", "parentFormRef", "console", "log", "formFieldName", "formField", "get", "onChanges", "changes", "node", "getContext", "formRef", "status$", "pipe", "takeUntil", "unsubscribe$", "subscribe", "status", "forEach", "x", "classList", "add", "remove", "Component", "meta", "selector", "inputs", "FormInputDirective", "_Directive", "formControlName", "formControl", "onInit", "onChange", "bind", "onBlur", "addEventListener", "value$", "value", "writeValue", "setAttribute", "setDisabledState", "disabled", "event", "onFocus", "touched", "getPre", "pre", "previousSibling", "nodeType", "document", "createTextNode", "parentNode", "insertBefore", "Directive", "FormGroupAccessor", "formGroupName", "formGroup", "SubmitDirective", "_getContext", "parentInstance", "replace", "event$", "fromEvent", "tap", "preventDefault", "shareReplay", "expression", "getAttribute", "outputFunction", "makeFunction", "resolve", "join", "FormModule", "_Module", "Module", "factories", "pipes", "declarations", "concat", "FormAbstract", "validators", "errors", "initSubjects_", "valueSubject", "BehaviorSubject", "valueChildren", "Subject", "statusSubject", "statusChildren", "initObservables_", "_this", "merge", "distinctUntilChanged", "skip", "dirty_", "next", "reduceValidators_", "validate", "map", "filter", "touched_", "set", "value_", "FormControl", "_FormAbstract", "call", "ReferenceError", "_assertThisInitialized", "FormAbstractCollection", "controls", "initControls_", "initControl_", "control", "_this2", "forEach_", "_this3", "reduce_", "result", "push", "combineLatest", "latest", "_this4", "callback", "_this5", "keys", "all_", "any_", "FormArray", "_FormAbstractCollecti", "Math", "max", "FormGroup", "RequiredValidator"], "mappings": "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", "file": "dist/rxcomp-form.min.js", "sourcesContent": [null, "const FormStatus = {\n\tValid: 'valid',\n\tInvalid: 'invalid',\n\tPending: 'pending',\n\tDisabled: 'disabled',\n};\n\nexport default FormStatus;\n\nexport const FormAttributes = ['untouched', 'touched', 'pristine', 'dirty', 'pending', 'enabled', 'disabled', 'valid', 'invalid'];\n", "import { Component, getContext } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormAttributes } from './form-status';\n\nexport default class formFieldDirective extends Component {\n\n\tgetFormRef(parentFormRef) {\n\t\tconsole.log('formFieldDirective', (this.formFieldName ? `formGroupName ${this.formFieldName}` : `formField ${this.formField}`, `parentFormRef ${parentFormRef}`));\n\t\treturn this.formFieldName ? parentFormRef.get(this.formFieldName) : this.formField;\n\t}\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tconst formRef = this.getFormRef(changes.formRef);\n\t\tconsole.log(formRef);\n\t\tthis.formRef = formRef;\n\t\tformRef.status$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(status => {\n\t\t\tFormAttributes.forEach(x => {\n\t\t\t\tif (formRef[x]) {\n\t\t\t\t\tnode.classList.add(x);\n\t\t\t\t} else {\n\t\t\t\t\tnode.classList.remove(x);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n}\n\nformFieldDirective.meta = {\n\tselector: '[[formField]],[[formFieldName]],[formFieldName]',\n\tinputs: ['formField', 'formFieldName'],\n};\n", "import { Directive, getContext } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormAttributes } from './form-status';\n\nexport default class FormInputDirective extends Directive {\n\n\tgetFormRef(parentFormRef) {\n\t\t// console.log('FormInputDirective', (this.formGroupName ? `formGroupName ${this.formGroupName}` : `formGroup ${this.formGroup}`, `parentFormRef ${parentFormRef}`));\n\t\treturn this.formControlName ? parentFormRef.get(this.formControlName) : this.formControl;\n\t}\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tthis.node = node;\n\t\t// log(node.getAttributeNode('formControl').value);\n\t\t// log('name', node.name);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\t// this.onFocus = this.onFocus.bind(this);\n\t\tnode.addEventListener('input', this.onChange);\n\t\tnode.addEventListener('change', this.onChange);\n\t\tnode.addEventListener('blur', this.onBlur);\n\t\t// node.addEventListener('focus', this.onFocus);\n\t}\n\n\tonChanges(changes) {\n\t\t// console.log('FormInputDirective.onChanges', changes);\n\t\tconst { node } = getContext(this);\n\t\t// const key = node.getAttributeNode('[name]').value;\n\t\tconst formRef = this.getFormRef(changes.formRef);\n\t\t// changes.formRef = formRef;\n\t\tthis.formRef = formRef;\n\t\t// console.log('FormInputDirective.formRef', formRef, 'changes', changes);\n\t\tformRef.value$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(value => {\n\t\t\t// console.log('Accessor.formRef.valueChanges$', value);\n\t\t});\n\t\tformRef.status$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(status => {\n\t\t\t/*\n\t\t\tconst pre = this.getPre(node);\n\t\t\tpre.textContent = '';\n\t\t\t*/\n\t\t\tFormAttributes.forEach(x => {\n\t\t\t\tif (formRef[x]) {\n\t\t\t\t\tnode.classList.add(x);\n\t\t\t\t\t// pre.textContent += x + ', ';\n\t\t\t\t} else {\n\t\t\t\t\tnode.classList.remove(x);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// formRef.errors.forEach(x => pre.textContent += `invalid-${x}, `);\n\t\t});\n\t\tthis.writeValue(formRef.value);\n\t\t// node.value = 'test';\n\t}\n\n\twriteValue(value) {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('value', value == null ? '' : value);\n\t}\n\n\tsetDisabledState(disabled) {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('disabled', disabled);\n\t}\n\n\tonChange(event) {\n\t\tconst { node } = getContext(this);\n\t\t// log(event.type);\n\t\t// log('formRef', this.formRef);\n\t\tthis.formRef.value = node.value;\n\t}\n\n\tonFocus(event) {}\n\n\tonBlur(event) {\n\t\t// log(event.type);\n\t\t// log('formRef', this.formRef);\n\t\tthis.formRef.touched = true;\n\t}\n\n\tgetPre(node) {\n\t\tlet pre = node.previousSibling;\n\t\tif (!pre || pre.nodeType !== 3) {\n\t\t\tpre = document.createTextNode('');\n\t\t\tnode.parentNode.insertBefore(pre, node);\n\t\t}\n\t\treturn pre;\n\t}\n\n}\n\nFormInputDirective.meta = {\n\tselector: 'input,textarea,select',\n\tinputs: ['formControl', 'formControlName'],\n};\n", "import { Component } from 'rxcomp';\n\nexport default class FormGroupAccessor extends Component {\n\n\tgetFormRef(parentFormRef) {\n\t\tconsole.log('FormGroupAccessor', (this.formGroupName ? `formGroupName ${this.formGroupName}` : `formGroup ${this.formGroup}`, `parentFormRef ${parentFormRef}`));\n\t\treturn this.formGroupName ? parentFormRef.get(this.formGroupName) : this.formGroup;\n\t}\n\n\tonChanges(changes) {\n\t\tconst formRef = this.getFormRef(changes.formRef);\n\t\t// changes.formRef = formRef;\n\t\tthis.formRef = formRef;\n\t\t// console.log('FormGroupAccessor.formRef', formRef);\n\t}\n\n}\n\nFormGroupAccessor.meta = {\n\tselector: '[[formGroup]],[[formGroupName]],[formGroupName]',\n\tinputs: ['formGroup', 'formGroupName'],\n};\n", "import { Directive, getContext } from 'rxcomp';\nimport { fromEvent } from 'rxjs';\nimport { shareReplay, takeUntil, tap } from 'rxjs/operators';\n\nconst EVENTS = ['submit'];\n\nexport default class SubmitDirective extends Directive {\n\n\tonInit() {\n\t\tconst { module, node, selector, parentInstance } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$ = this.event$ = fromEvent(node, event).pipe(\n\t\t\ttap(event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// console.log('event');\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('parentInstance', parentInstance);\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\n}\n\nSubmitDirective.meta = {\n\tselector: `[(${EVENTS.join(')],[(')})]`,\n};\n", "import { Module } from 'rxcomp';\nimport formFieldDirective from './form/control-group.directive';\nimport FormInputDirective from './form/form-accessor';\nimport FormGroupAccessor from './form/form-group-accessor';\nimport SubmitDirective from './form/submit.directive';\n\nexport default class FormModule extends Module {}\nconst factories = [\n\tFormInputDirective,\n\tFormGroupAccessor,\n\tformFieldDirective,\n\tSubmitDirective,\n];\nconst pipes = [\n];\nFormModule.meta = {\n\tdeclarations: [\n\t\t...factories,\n\t\t...pipes,\n\t],\n\texports: [\n\t\t...factories,\n\t\t...pipes,\n\t]\n};\n", "import { BehaviorSubject, merge, Subject } from \"rxjs\";\nimport { distinctUntilChanged, shareReplay, skip, tap } from 'rxjs/operators';\nimport FormStatus from './form-status';\n\nexport default class FormAbstract {\n\tconstructor(validators = []) {\n\t\tthis.validators = validators;\n\t\t// this.errors = {};\n\t\tthis.errors = [];\n\t}\n\n\tinitSubjects_() {\n\t\tthis.valueSubject = new BehaviorSubject(null);\n\t\tthis.valueChildren = new Subject();\n\t\tthis.statusSubject = new BehaviorSubject(this);\n\t\tthis.statusChildren = new Subject();\n\t}\n\n\tinitObservables_() {\n\t\tthis.value$ = merge(this.valueSubject, this.valueChildren).pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tskip(1),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tif (value === this.value) {\n\t\t\t\t\tthis.statusSubject.next(this);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.status$ = merge(this.statusSubject, this.statusChildren).pipe(\n\t\t\t// auditTime(1),\n\t\t\ttap(status => {\n\t\t\t\tthis.reduceValidators_();\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\treduceValidators_() {\n\t\treturn this.validate(this.value);\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tthis.errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tget valid() { return this.status === FormStatus.Valid; }\n\tget invalid() { return this.status === FormStatus.Invalid; }\n\tget pending() { return this.status === FormStatus.Pending; }\n\tget disabled() { return this.status === FormStatus.Disabled; }\n\tget enabled() { return this.status !== FormStatus.Disabled; }\n\tget dirty() { return this.dirty_; }\n\tget pristine() { return !this.dirty_; }\n\tget touched() { return this.touched_; }\n\tget untouched() { return !this.touched_; }\n\n\tset touched(touched) {\n\t\tthis.touched_ = touched;\n\t\tthis.statusSubject.next(this);\n\t}\n\n\tget value() { return this.value_; }\n\n\tset value(value) {\n\t\tthis.value_ = value;\n\t\tthis.valueSubject.next(value);\n\t}\n\n}\n", "import FormAbstract from \"./form-abstract\";\n\nexport default class FormControl extends FormAbstract {\n\n\tconstructor(value = null, validators) {\n\t\tsuper(validators);\n\t\tthis.value_ = value;\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t\tthis.statusSubject.next(this);\n\t}\n\n}\n\nexport function formControl(value, validators) {\n\treturn new FormControl(value, validators);\n}\n", "import { BehaviorSubject, combineLatest, merge } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, skip, tap } from 'rxjs/operators';\nimport FormAbstract from './form-abstract';\nimport FormControl from './form-control';\nimport FormStatus from './form-status';\n\nexport default class FormAbstractCollection extends FormAbstract {\n\n\tconstructor(controls, validators) {\n\t\tsuper(validators);\n\t\tthis.controls = controls;\n\t\tthis.initControls_(controls);\n\t\tthis.initSubjects_();\n\t\tthis.initObservables_();\n\t\t// this.statusSubject.next(this);\n\t}\n\n\tinitControl_(control) {\n\t\treturn control instanceof FormAbstract ? control : new FormControl(control, this.validators);\n\t}\n\n\tinitControls_(controls) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tthis.set(this.initControl_(control), key);\n\t\t});\n\t\treturn controls;\n\t}\n\n\tinitSubjects_() {\n\t\tthis.valueSubject = new BehaviorSubject(null);\n\t\tconst valueChildren = this.reduce_((result, control) => {\n\t\t\tresult.push(control.valueSubject);\n\t\t\treturn result;\n\t\t}, []);\n\t\tthis.valueChildren = combineLatest(valueChildren).pipe(\n\t\t\tmap(latest => this.value),\n\t\t\t// distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n\t\t\t// this.dirty_ = this.any_('dirty_', true);\n\t\t\t/*\n\t\t\tmap(merged => {\n\t\t\t\tconst values = {};\n\t\t\t\tObject.keys(this.controls).forEach((key, i) => {\n\t\t\t\t\tvalues[key] = merged[i] || null;\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t}),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tthis.statusSubject.next(this);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.statusSubject = new BehaviorSubject(this);\n\t\tconst statusChildren = this.reduce_((result, control) => {\n\t\t\tresult.push(control.status$);\n\t\t\treturn result;\n\t\t}, []);\n\t\tthis.statusChildren = combineLatest(statusChildren).pipe(\n\t\t\t/*\n\t\t\ttap(controls => {\n\t\t\t\tthis.dirty_ = this.any_('dirty_', true);\n\t\t\t}),\n\t\t\t*/\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\tinitObservables_() {\n\t\tthis.value$ = merge(this.valueSubject, this.valueChildren).pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tskip(1),\n\t\t\ttap(value => {\n\t\t\t\tthis.dirty_ = true;\n\t\t\t\tif (value === this.value) {\n\t\t\t\t\tthis.statusSubject.next(this);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t\tthis.status$ = merge(this.statusSubject, this.statusChildren).pipe(\n\t\t\t// auditTime(1),\n\t\t\ttap(status => {\n\t\t\t\tthis.reduceValidators_();\n\t\t\t}),\n\t\t\tshareReplay(1)\n\t\t);\n\t}\n\n\tvalidate(value) {\n\t\tif (this.status === FormStatus.Disabled) {\n\t\t\t// this.errors = {};\n\t\t\tthis.errors = [];\n\t\t} else {\n\t\t\t// this.errors = Object.assign({}, ...this.validators.map(x => x(value)));\n\t\t\t// this.status = Object.keys(this.errors).length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t\tlet errors = this.validators.map(x => x(value)).filter(x => x !== null);\n\t\t\tthis.errors = this.reduce_((result, control) => {\n\t\t\t\treturn result.concat(control.errors);\n\t\t\t}, errors);\n\t\t\tthis.status = this.errors.length === 0 ? FormStatus.Valid : FormStatus.Invalid;\n\t\t}\n\t\treturn this.errors;\n\t}\n\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(key => callback(this.controls[key], key));\n\t}\n\n\treduce_(callback, result) {\n\t\tthis.forEach_((control, key) => {\n\t\t\tresult = callback(result, control, key);\n\t\t});\n\t\treturn result;\n\t}\n\n\tall_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result && control[key] === value;\n\t\t}, true);\n\t}\n\n\tany_(key, value) {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result || control[key] === value;\n\t\t}, false);\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tthis.controls[key] = control;\n\t}\n\n\tget touched() {\n\t\treturn this.reduce_((result, control) => {\n\t\t\treturn result && control.touched;\n\t\t}, true);\n\t}\n\n\tset touched(touched) {\n\t\t// this.touched_ = touched;\n\t\tthis.forEach_(control => {\n\t\t\tcontrol.touched = touched;\n\t\t});\n\t\tthis.statusSubject.next(this);\n\t}\n\n\tget value() {\n\t\treturn this.reduce_((result, control, key) => {\n\t\t\tresult[key] = control.value;\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\tset value(value) {}\n\n}\n", "import FormAbstractCollection from './form-abstract-collection';\n\nexport default class FormArray extends FormAbstractCollection {\n\n\tconstructor(controls = [], validators) {\n\t\tsuper(controls, validators);\n\t}\n\n\tforEach_(callback) {\n\t\tthis.controls.forEach((control, key) => callback(control, key));\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tthis.controls.length = Math.max(this.controls.length, key);\n\t\tthis.controls[key] = control;\n\t}\n\n}\n\nexport function formArray(controls, validators) {\n\treturn new FormArray(controls, validators);\n}\n", "import FormAbstractCollection from './form-abstract-collection';\n\nexport default class FormGroup extends FormAbstractCollection {\n\n\tconstructor(controls = {}, validators) {\n\t\tsuper(controls, validators);\n\t}\n\n\tforEach_(callback) {\n\t\tObject.keys(this.controls).forEach(key => callback(this.controls[key], key));\n\t}\n\n\tget(key) {\n\t\treturn this.controls[key];\n\t}\n\n\tset(control, key) {\n\t\tthis.controls[key] = control;\n\t}\n\n}\n\nexport function formGroup(controls, validators) {\n\treturn new FormGroup(controls, validators);\n}\n", "export function RequiredValidator(value) {\n\t// return (value == null || value.length === 0) ? { required: true } : null;\n\treturn (value == null || value.length === 0) ? 'required' : null;\n}\n"] }
